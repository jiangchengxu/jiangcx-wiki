%template code_3
%toc

= Android RILD分析 =

我们知道，现在大多数的手机实现有两个处理器组成：AP和BP,AP为Application Processor简称，负责运行应用程序，而BP即Baseband Processor则专门负责无线通信，两个处理器之间使用AT指令通信。而每个BP的生产商实现的AT指令又可能差异很大，而且多数因为商业的原因不会公开源码而是以共享库的方式提供。本文中分析的rild为AP与BP搭建了沟通的桥梁：rild运行与AP中，通过加载生产商提供的rillib共享库，将AP与BP通过AT指令连接起来。

RILD进程由linux系统在启动时加载并启动。具体看init.rc文件:
init.rc
{{{class="brush: bash"
......

service ril-daemon /system/bin/rild
    class main
    socket rild stream 660 root radio
    socket rild-debug stream 660 radio system
    user root
    group radio cache inet misc audio sdcard_rw log

......
}}}
init.rc文件分析请看[[android_init|Android启动篇]],这里只需要明白，linux系统启动时，会启动/system/bin/rild进程服务，该服务的名字是rild-daemon,关爱服务会启动两个socket:rild socket和rild-debug socket

`rild.c`
{{{class="brush: c"
int main(int argc, char **argv)
{
    const char * rilLibPath = NULL;
    char **rilArgv;
    void *dlHandle;
    const RIL_RadioFunctions *(*rilInit)(const struct RIL_Env *, int, char **);
    const RIL_RadioFunctions *funcs;
    char libPath[PROPERTY_VALUE_MAX];
    unsigned char hasLibArgs = 0;

    int i;

    umask(S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH);
    ......

    switchUser();
    //rilLibPath实际的rillib路径，这里我们以android的reference来分析
    //#define  REFERENCE_RIL_PATH  "/system/lib/libreference-ril.so"
    
    //(1)
    dlHandle = dlopen(rilLibPath, RTLD_NOW);

    ......
    //(2)
    RIL_startEventLoop();

    //(3)
    rilInit = (const RIL_RadioFunctions *(*)(const struct RIL_Env *, int, char **))dlsym(dlHandle, "RIL_Init");
    ......
    funcs = rilInit(&s_rilEnv, argc, rilArgv);
    
    //(3)
    RIL_register(funcs);
    ......
}
}}}

我们将rild的实现过程归结为3步：

== 1, 加载rillib共享库 ==
使用dlopen系统调用，动态加载提供的rillib共享库，由于每个生产商提供的libril共享库的实现都不同，这里我们以android rillib的参考实现作为分析的目标，他的路径是:"/system/lib/libreference-ril.so"，实现文件在reference-ril.c中。dlopen返回打开的共享库的句柄，可以通过该句柄获取共享库中的符号连接。

----
== 2, 搭建ril_event事件分发处理框架 ==
在介绍这个框架之前，我们需要再次明确rild所需要完成的工作 ，这有助于我们理解rild架构的实现。
# rild需要及时接收RILJ发送过来的请求
# rild需要将RILJ发送的请求及时通过libril发送给Modem
# rild需要监控libril发送过来的响应
# rild需要及时将请求的响应发送到RILJ
# rild需要将libril发送过来的Modem主动上报信息及时通知到RILJ 

从这里来看，rild的主要工作是处理RILJ和libril(Modem）发送过来的事件，为此，rild开启了一个单独的线程，来接受两方面发送过来的事件。

`ril.cpp`
{{{class="brush: cpp"
extern "C" void
RIL_startEventLoop(void) {
    int ret;
    pthread_attr_t attr;

    /* spin up eventLoop thread and wait for it to get started */
    s_started = 0;
    pthread_mutex_lock(&s_startupMutex);

    pthread_attr_init (&attr);
    pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
    //创建一个线程，运行eventLoop
    ret = pthread_create(&s_tid_dispatch, &attr, eventLoop, NULL);

    while (s_started == 0) {
        //等待eventLoop线程运行起来
        pthread_cond_wait(&s_startupCond, &s_startupMutex);
    }

    pthread_mutex_unlock(&s_startupMutex);

    if (ret < 0) {
        LOGE("Failed to create dispatch thread errno:%d", errno);
        return;
    }
}
}}}
线程的名称是s_tid_dispatch,入口函数是eventLoop,记住这个线程的名字，后面还会碰到好几个线程。而eventLoop中就是rild事件分发处理的重点。该线程为rild搭建了一个事件处理框架，将RILJ和Modem发送过来的信息都作为一个ril_event,储存在自己的ril_event列表中，通过select多路复用机制，对列表中的事件进行处理。

`ril.cpp`
{{{class="brush: cpp"
static void *
eventLoop(void *param) {
    int ret;
    int filedes[2];

    //(1)初始化ril event使用的数据结构
    ril_event_init();

    pthread_mutex_lock(&s_startupMutex);

    s_started = 1;
    pthread_cond_broadcast(&s_startupCond);
    //当该线程运行起来后，置标志位通知启动线程当前线程已经启动起来了

    pthread_mutex_unlock(&s_startupMutex);

    //(2)创建匿名管道
    ret = pipe(filedes);

    ......
    //保存匿名管道的读写端，
    s_fdWakeupRead = filedes[0];
    s_fdWakeupWrite = filedes[1];

    //设置读端口属性为非阻塞
    fcntl(s_fdWakeupRead, F_SETFL, O_NONBLOCK);

    //初始化s_wakeupfd_event ril_event
    ril_event_set (&s_wakeupfd_event, s_fdWakeupRead, true,
                processWakeupCallback, NULL);
    //将s_wakeupfd_event添加到监控列表中
    rilEventAddWakeup (&s_wakeupfd_event);

    // Only returns on error
    //(3)启动ril_event事件循环
    ril_event_loop();

    return NULL;
}
}}}

==== 2.1 对ril_event列表及select多路复用的读端口进行初始化，为后面的循环框架做准备 ====
`ril_event.cpp`
{{{class="brush: cpp"
void ril_event_init()
{
    MUTEX_INIT();                   //初始化互斥量

    FD_ZERO(&readFds);              //清空读端口集
    init_list(&timer_list);         //初始化timer_list
    init_list(&pending_list);       //初始化pending_list
    memset(watch_table, 0, sizeof(watch_table));    //初始化watch_table
}
}}}

这里面涉及到4个主要变量，下面对他们逐个说明
# readFds:  RILJ发送过来的请求会被封装为ril_event,该ril_event中也包含了发送请求的socket句柄，每个请求的句柄会被添加到该读端口集合中，以便在select多路复用对句柄进行检测
# timer_list:   负责维护定时任务，一般是rild收到libril发送过的信息会被放到该列表中，由于rild对RILJ请求回复机制采用的是异步模式，所以RILJ的请求回复与Modem的主动上报信息会被rild一样对待
# pending_list: 负责维护准备处理的任务，timer_list中到时的任务他watch_table中的任务会被添加到pending_list,存在与pending_list中的任务会在这一轮事件循环中进行处理
# watch_table:  负责维护RILJ发送过来的请求和框架自身的事件。

==== 2.2 创建匿名管道，并添加到watch_table中 ====
创建一对匿名管道，封装到s_wakeupfd_event事件，通过rilEventAddWakeup函数将事件添加到watch_table中。
在分析rilEventAddWakeup(）之前，先来看看ril_event定义
`ril_event.h`
{{{class="brush: cpp"
struct ril_event {
    struct ril_event *next;
    struct ril_event *prev;

    int fd;     //关联的文件句柄，表明从哪个文件读取的数据
    int index;  //事件索引
    bool persist;   //是否保持，false时，在处理完该事件后，就将该事件从watch_table中删除，反之则不删除
    struct timeval timeout; //超时时间
    ril_event_cb func;      //事件触发后的回调函数
    void *param;            //回调函数的参数
};
}}}
rilEventAddWakeup(）函数将ril_event添加到watch_table中，然后将事件关联的句柄添加到readFds句柄集中，供后面的select使用，最后会通过triggerEvLoop(）通过向写管道中写入数据触发一轮事件处理。
{{{class="brush: cpp"
static void rilEventAddWakeup(struct ril_event *ev) {
    ril_event_add(ev);
    triggerEvLoop();
}
void ril_event_add(struct ril_event * ev)
{
    MUTEX_ACQUIRE();
    for (int i = 0; i < MAX_FD_EVENTS; i++) {
        if (watch_table[i] == NULL) {
            watch_table[i] = ev;
            ev->index = i;
            FD_SET(ev->fd, &readFds);   //将文件句柄添加到句柄集中
            if (ev->fd >= nfds) nfds = ev->fd+1;    //设置句柄集中的句柄的数量
            break;
        }
    }
    MUTEX_RELEASE();
}
static void triggerEvLoop() {
    int ret;
    //当其他的线程使用该函数时，向匿名管道的写端口写入数据，触发一次select处理循环
    if (!pthread_equal(pthread_self(), s_tid_dispatch)) {
        /* trigger event loop to wakeup. No reason to do this,
         * if we're in the event loop thread */
         do {
            ret = write (s_fdWakeupWrite, " ", 1);
         } while (ret < 0 && errno == EINTR);
    }
}
}}}

==== 2.3 启动事件处理循环 ====
前面我们说过readFds,现在就是他施展拳脚的时候了，通过使用select机制监控readFds,触发事件。
`ril_event.cpp`
{{{class="brush: cpp"
void ril_event_loop()
{
    int n;
    fd_set rfds;
    struct timeval tv;
    struct timeval * ptv;

    //循环处理事件
    for (;;) {

        //因为readFds并不是线程安全的，这里做一份拷贝，防止在select等待时readFds被修改
        memcpy(&rfds, &readFds, sizeof(fd_set));
        //判断当前时间
        if (-1 == calcNextTimeout(&tv)) {
            // no pending timers; block indefinitely
            ptv = NULL;
        } else {
            ptv = &tv;
        }
        
        //对rfds集合中的句柄进行监控
        n = select(nfds, &rfds, NULL, NULL, ptv);
        if (n < 0) {
            if (errno == EINTR) continue;

            LOGE("ril_event: select error (%d)", errno);
            // bail?
            return;
        }
        //将超时事件添加到pending_list
        processTimeouts();
        //将watch_table中的事件添加到pending_list
        processReadReadies(&rfds, n);
        //调用pending_list中的事件处理函数
        firePending();
    }
}
}}}
函数等待readFds读集合中有数据可读，当有数据可读时，将timer_list和watch_table中的ril_event添加到pending_list中，
{{{class="brush: cpp"
static void processTimeouts()
{
    MUTEX_ACQUIRE();
    struct timeval now;
    struct ril_event * tev = timer_list.next;
    struct ril_event * next;

    getNow(&now);
    // walk list, see if now >= ev->timeout for any events
    //查询timer_list中所有的ril_event,当已经到时间的ril_event从timer_list中转移到pending_list中，准备处理
    while ((tev != &timer_list) && (timercmp(&now, &tev->timeout, >))) {
        // Timer expired
        next = tev->next;
        removeFromList(tev);
        addToList(tev, &pending_list);
        tev = next;
    }
    MUTEX_RELEASE();
}
static void processReadReadies(fd_set * rfds, int n)
{
    MUTEX_ACQUIRE();

    //检查watch_table中的ril_event,如果他们的fd可读，将其添加到pending_list中，然后根据persist属性，决定是否从watch_table中删除该ril_event
    for (int i = 0; (i < MAX_FD_EVENTS) && (n > 0); i++) {
        struct ril_event * rev = watch_table[i];
        if (rev != NULL && FD_ISSET(rev->fd, rfds)) {
            addToList(rev, &pending_list);
            if (rev->persist == false) {
                removeWatch(rev, i);
            }
            n--;
        }
    }

    MUTEX_RELEASE();
}
}}}
最后调用firePending(）处理pending_list中的ril_event
{{{class="brush: cpp"
static void firePending()
{
    struct ril_event * ev = pending_list.next;
    while (ev != &pending_list) {
        struct ril_event * next = ev->next;
        removeFromList(ev);
        ev->func(ev->fd, 0, ev->param);
        ev = next;
    }
}
}}}
做个总结：
rild启动线程s_tid_dispatch,等待readFds集合中有描述符可读，一旦select返回，便处理watch_list和pending_list中的事件，调用这些事件的处理函数。其他线程可以通过rilEventAddWakeup()函数将事件添加到watch_list,该函数会自动将新添加的ril_event的文件句柄添加到readFds中，同时，该函数还会通过往匿名管道写端s_fdWakeupWrite中写入数据，使readFds中匿名管道读端描述符s_fdWakeupRead可读，从而触发select返回。

再来个eventLoop的处理流程图，也从网上K来的

{{../../../public/images/ril_eventloop1.jpg}}
再来一张

{{../../../public/images/ril_eventloop2.jpg}}

s_tid_dispatch线程启动后，便会阻塞在select(）调用，此时readFds集合中只有s_fdWakeupRead描述符，等待其他线程通过s_fdWakeupWrite端口写入数据来激活s_tid_dispatch线程进行事件处理。

----
== 3, 初始化libril==
RIL_Init是所有的libril共享库必须提供的函数，rild通过调用这个函数，使用libril共享库完成对Modem设备的操作。

在开始具体的代码分析之前，我们还是先考虑一下libril的工作任务：
rild使用libril，实现发送指令给通信模块并获取指令响应以及获取通信模块上报的信息。而libril由生产商为不同的通信模块量身定制，其具体实现对于rild来说是透明的。rild如何将命令发送到libril而libril又如何将处理结果发送给rild的呢？

android采用rild负责定义输出规范，而libril负责定义输入规范的方式解决这个问题，rild通过libril定义的输入规范将命令发送到libril,libril在处理完后，将处理结果按照rild定义的输出规范发送出来。

知道了他的实现方式后，我们看代码就比较容易了，首先看看rillib提供的RIL_Init(）注册函数：

`reference-ril.c`
{{{class="brush: c"
pthread_t s_tid_mainloop;

const RIL_RadioFunctions *RIL_Init(const struct RIL_Env *env, int argc, char **argv)
{
    int ret;
    int fd = -1;
    int opt;
    pthread_attr_t attr;

    //将rild发送过来的回调函数保存下来，供libril以后调用
    s_rilenv = env;

    ......

    pthread_attr_init (&attr);
    pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
    ret = pthread_create(&s_tid_mainloop, &attr, mainLoop, NULL);

    return &s_callbacks;
}
}}}

1. 函数接收一个RIL_Env结构指针，该结构就是rild定义的输出规范，由rild实现，由libril调用，向rild发送请求处理结果或主动上报信息

`rild.c`
{{{class="brush: c"
static struct RIL_Env s_rilEnv = {
    RIL_onRequestComplete,      //处理非主动命令时libril的回调函数
    RIL_onUnsolicitedResponse,  //处理主动命令时libril的回调函数
    RIL_requestTimedCallback    //处理超时请求时libril的回调函数
};
}}}

1.1 RIL_onUnsolicitedResponse(）用于处理主动上报命令。
{{{class="brush: cpp"
extern "C"
void RIL_onUnsolicitedResponse(int unsolResponse, void *data,
                                size_t datalen)
{
    int unsolResponseIndex;
    int ret;
    int64_t timeReceived = 0;
    bool shouldScheduleTimeout = false;

    if (s_registerCalled == 0) {
        // Ignore RIL_onUnsolicitedResponse before RIL_register
        LOGW("RIL_onUnsolicitedResponse called before RIL_register");
        return;
    }

    unsolResponseIndex = unsolResponse - RIL_UNSOL_RESPONSE_BASE;

    if ((unsolResponseIndex < 0)
        || (unsolResponseIndex >= (int32_t)NUM_ELEMS(s_unsolResponses))) {
        LOGE("unsupported unsolicited response code %d", unsolResponse);
        return;
    }

    // Grab a wake lock if needed for this reponse,
    // as we exit we'll either release it immediately
    // or set a timer to release it later.
    switch (s_unsolResponses[unsolResponseIndex].wakeType) {
        case WAKE_PARTIAL:
            grabPartialWakeLock();
            shouldScheduleTimeout = true;
        break;

        case DONT_WAKE:
        default:
            // No wake lock is grabed so don't set timeout
            shouldScheduleTimeout = false;
            break;
    }

    // Mark the time this was received, doing this
    // after grabing the wakelock incase getting
    // the elapsedRealTime might cause us to goto
    // sleep.
    if (unsolResponse == RIL_UNSOL_NITZ_TIME_RECEIVED) {
        timeReceived = elapsedRealtime();
    }

    appendPrintBuf("[UNSL]< %s", requestToString(unsolResponse));

    Parcel p;

    p.writeInt32 (RESPONSE_UNSOLICITED);    //写入请求的类型
    p.writeInt32 (unsolResponse);       //写入请求的ID

    //s_unsolResponses是一个数组。里面包含所有rild支持的主动上报请求及其相应的处理函数
    ret = s_unsolResponses[unsolResponseIndex]
                .responseFunction(p, data, datalen);
    if (ret != 0) {
        // Problem with the response. Don't continue;
        goto error_exit;
    }

    // some things get more payload
    switch(unsolResponse) {
        case RIL_UNSOL_RESPONSE_RADIO_STATE_CHANGED:
            p.writeInt32(s_callbacks.onStateRequest());
            appendPrintBuf("%s {%s}", printBuf,
                radioStateToString(s_callbacks.onStateRequest()));
        break;


        case RIL_UNSOL_NITZ_TIME_RECEIVED:
            // Store the time that this was received so the
            // handler of this message can account for
            // the time it takes to arrive and process. In
            // particular the system has been known to sleep
            // before this message can be processed.
            p.writeInt64(timeReceived);
        break;
    }

    //将p通过s_fdCommand socket发送出去
    ret = sendResponse(p);
    ......
    return;

error_exit:
    if (shouldScheduleTimeout) {
        releaseWakeLock();
    }
}
}}}

1.2 <a name="tag_onrequestcomplete">RIL_onRequestComplete()</a>在libril处理非主动命令时调用，将处理结果通过socket发送到RILJ
{{{class="brush: cpp"
extern "C" void
RIL_onRequestComplete(RIL_Token t, RIL_Errno e, void *response, size_t responselen) {
    RequestInfo *pRI;
    int ret;
    size_t errorOffset;

    pRI = (RequestInfo *)t;

    if (!checkAndDequeueRequestInfo(pRI)) {
        LOGE ("RIL_onRequestComplete: invalid RIL_Token");
        return;
    }

    if (pRI->local > 0) {
        // Locally issued command...void only!
        // response does not go back up the command socket
        LOGD("C[locl]< %s", requestToString(pRI->pCI->requestNumber));

        goto done;
    }

    appendPrintBuf("[%04d]< %s",
        pRI->token, requestToString(pRI->pCI->requestNumber));

    if (pRI->cancelled == 0) {
        Parcel p;

        p.writeInt32 (RESPONSE_SOLICITED);  //写入请求的类型
        p.writeInt32 (pRI->token);          //写入请求的序列号
        errorOffset = p.dataPosition();

        p.writeInt32 (e);

        if (response != NULL) {
            //将modem反馈的请求结果进行初步处理处理
            ret = pRI->pCI->responseFunction(p, response, responselen);

            /* if an error occurred, rewind and mark it */
            if (ret != 0) {
                p.setDataPosition(errorOffset);
                p.writeInt32 (ret);
            }
        }

        if (e != RIL_E_SUCCESS) {
            appendPrintBuf("%s fails by %s", printBuf, failCauseToString(e));
        }

        if (s_fdCommand < 0) {
            LOGD ("RIL onRequestComplete: Command channel closed");
        }
        //通过s_fdCommand将p发送到RILJ
        sendResponse(p);
    }

done:
    free(pRI);
}
}}}


2. 函数返回一个RIL_RadioFunctions结构指针，该结构是libril定义的输入规范，由libril实现，由rild调用，用来向libril发送请求。

`ril.h`
{{{class="brush: c"
typedef struct {
    int version;        /* set to RIL_VERSION */
    RIL_RequestFunc onRequest;
    RIL_RadioStateRequest onStateRequest;
    RIL_Supports supports;
    RIL_Cancel onCancel;
    RIL_GetVersion getVersion;
} RIL_RadioFunctions;
}}}


3. 函数创建了一个新的线程s_tid_mainloop,该线程的入口函数mainLoop(）。注意libril只是一个共享库文件，函数实际在rild进程中运行。线程的主要任务是获取AT串口设备句柄，用于后续通过该句柄发送命令给通信模块，并启动监听该句柄，当Modem通过句柄发送信息过来时，进行处理。

`reference-ril.c`
{{{class="brush: c"
static void *
mainLoop(void *param)
{
    int fd;
    int ret;

    //设置AT读端口关闭时的处理函数
    at_set_on_reader_closed(onATReaderClosed);
    //设置AT指令超时的处理函数 
    at_set_on_timeout(onATTimeout);

    for (;;) {
        fd = -1;
        while  (fd < 0) {
            //略过打开AT串口设备fd
            ...... 

            if (fd < 0) {
                perror ("opening AT interface. retrying...");
                sleep(10);
                /* never returns */
            }
        }

        s_closed = 0;
        //(1)
        ret = at_open(fd, onUnsolicited);

        if (ret < 0) {
            LOGE ("AT error %d on at_open\n", ret);
            return 0;
        }
        //(2)
        RIL_requestTimedCallback(initializeCallback, NULL, &TIMEVAL_0);

        // Give initializeCallback a chance to dispatched, since
        // we don't presently have a cancellation mechanism
        sleep(1);

        //等待AT模块关闭
        waitForClose();
    }
}
}}}
下面拿出两个关键的函数来分析：

==== 3.1 创建读取at串口设备的工作线程 ====
at_open()函数会创建一个<a name="tag_s_tid_reader">s_tid_reader</a>线程，入口函数是readerLoop(）,该线程的主要工作是不断的读取串口设备发送过来的数据，并进行处理。

`atchannel.c`
{{{class="brush: c"
int at_open(int fd, ATUnsolHandler h)
{
    ......
    
    s_fd = fd;
    s_unsolHandler = h; 

    ......
    
    pthread_attr_init (&attr);
    pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);

    ret = pthread_create(&s_tid_reader, &attr, readerLoop, &attr);
    ......
}

static void *readerLoop(void *arg)
{
    for (;;) {
        const char * line;

        //从串口中不断的读取数据，直到读取一行数据
        line = readline();

        if (line == NULL) {
            //当无法读取到完整的指令时，退出循环
            break;
        }

        //对短信命令（+CMT,+CDS,+CBM）处理
        if(isSMSUnsolicited(line)) {
            char *line1;
            const char *line2;

            // The scope of string returned by 'readline()' is valid only
            // till next call to 'readline()' hence making a copy of line
            // before calling readline again.
            line1 = strdup(line);
            line2 = readline();

            if (line2 == NULL) {
                break;
            }

            if (s_unsolHandler != NULL) {
                s_unsolHandler (line1, line2);
            }
            free(line1);
        } else {
            //对该行数据进行处理
            processLine(line);
        }
        ......
    }

    //通知读取信息失败
    onReaderClosed();
    return NULL;
}
}}}
processLine(）用于对从串口读回的每行数据进行处理
{{{class="brush: c"
static void processLine(const char *line)
{
    pthread_mutex_lock(&s_commandmutex);

    if (sp_response == NULL) {
        //sp_response=NULL表示当前没有命令发出，所以为modem的主动上报信息
        handleUnsolicited(line);
    } else if (isFinalResponseSuccess(line)) {
        //命令最终处理结果：返回SUCCESS
        sp_response->success = 1;
        handleFinalResponse(line);
    } else if (isFinalResponseError(line)) {
        //命令最终处理结果：返回ERROR
        sp_response->success = 0;
        handleFinalResponse(line);
    } else if (s_smsPDU != NULL && 0 == strcmp(line, "> ")) {
        //发送短信的AT命令的特殊处理
        // See eg. TS 27.005 4.3
        // Commands like AT+CMGS have a "> " prompt
        writeCtrlZ(s_smsPDU);
        s_smsPDU = NULL;
    } else switch (s_type) {
        case NO_RESULT:
            //当前命令不会导致modem反馈处理结果，此时读到的信息作为主动上报信息处理
            handleUnsolicited(line);
            break;
        case NUMERIC:
            //判断是否是当前命令的处理结果，如果是，则保存处理结果，否则作为主动上报信息处理
            if (sp_response->p_intermediates == NULL
                && isdigit(line[0])
            ) {
                addIntermediate(line);
            } else {
                handleUnsolicited(line);
            }
            break;
        case SINGLELINE:
            //判断是否是当前命令的处理结果，如果是，则保存处理结果，否则作为主动上报信息处理
            if (sp_response->p_intermediates == NULL
                && strStartsWith (line, s_responsePrefix)
            ) {
                addIntermediate(line);
            } else {
                handleUnsolicited(line);
            }
            break;
        case MULTILINE:
            //判断是否是当前命令的处理结果，如果是，则保存处理结果，否则作为主动上报信息处理
            if (strStartsWith (line, s_responsePrefix)) {
                addIntermediate(line);
            } else {
                handleUnsolicited(line);
            }
        break;

        default: /* this should never be reached */
            LOGE("Unsupported AT command type %d\n", s_type);
            handleUnsolicited(line);
        break;
    }

    pthread_mutex_unlock(&s_commandmutex);
}
}}}
从这里的处理来看，s_tid_reader线程在读到数据后，会根据当前命令的状态判断读到的数据是当前命令的处理结果还是modem主动上报的信息，主动命令由handleUnsolicited(）函数处理，命令的处理结果则是由handleFinalResponse(）函数处理。

`atchannel.c`

{{{class="brush: c"
static void handleFinalResponse(const char *line)
{
    sp_response->finalResponse = strdup(line);
    
    发送s_commandcond信号，通知正在等待处理结果的at_send_command_full_nolock()函数。
    pthread_cond_signal(&s_commandcond);
}
}}}
{{{class="brush: c"
//主动上报信息的处理
static void handleUnsolicited(const char *line)
{
    if (s_unsolHandler != NULL) {
        s_unsolHandler(line, NULL);
    }
}
}}}
非主动上报的命令处理时，只是将s_commandcond信号发送出去，此时，发送命令的线程正在等待获取该信号以进一步处理。这部分会在后面看到。

对于主动上报的信息，调用了s_unsolHandler(）函数处理，而该函数是在libril的RIL_Init(）函数中，打开at设备时传入的。

`reference-ril.c`
{{{class="brush: c"
void main(){
    ......

    s_closed = 0;
    ret = at_open(fd, onUnsolicited);

    if (ret < 0) {
        LOGE ("AT error %d on at_open\n", ret);
        return 0;
    }
    ......
}
}}}
`atchannel.c`
{{{class="brush: c"
int at_open(int fd, ATUnsolHandler h)
{
    int ret;
    pthread_t tid;
    pthread_attr_t attr;

    s_fd = fd;
    s_unsolHandler = h;
    s_readerClosed = 0;
}}}

onUnsolicited()函数用于处理通过modem读取到的主动上报信息。运行在atchannel的reader线程中。

`reference-ril.c`
{{{class="brush: c"
static void onUnsolicited (const char *s, const char *sms_pdu)
{
    char *line = NULL;
    int err;

    /* Ignore unsolicited responses until we're initialized.
     * This is OK because the RIL library will poll for initial state
     */
    if (sState == RADIO_STATE_UNAVAILABLE) {
        return;
    }

    if (strStartsWith(s, "%CTZV:")) {
        /* TI specific -- NITZ time */
        char *response;

        line = strdup(s);
        at_tok_start(&line);

        err = at_tok_nextstr(&line, &response);

        if (err != 0) {
            LOGE("invalid NITZ line %s\n", s);
        } else {
            RIL_onUnsolicitedResponse (
                RIL_UNSOL_NITZ_TIME_RECEIVED,
                response, strlen(response));
        }
    } else if (strStartsWith(s,"+CRING:")
                || strStartsWith(s,"RING")
                || strStartsWith(s,"NO CARRIER")
                || strStartsWith(s,"+CCWA")
    ) {
        RIL_onUnsolicitedResponse (
            RIL_UNSOL_RESPONSE_CALL_STATE_CHANGED,
            NULL, 0);
#ifdef WORKAROUND_FAKE_CGEV
        RIL_requestTimedCallback (onDataCallListChanged, NULL, NULL); //TODO use new function
#endif /* WORKAROUND_FAKE_CGEV */
    } else if (strStartsWith(s,"+CREG:")
                || strStartsWith(s,"+CGREG:")
    ) {
        RIL_onUnsolicitedResponse (
            RIL_UNSOL_RESPONSE_VOICE_NETWORK_STATE_CHANGED,
            NULL, 0);
#ifdef WORKAROUND_FAKE_CGEV
        RIL_requestTimedCallback (onDataCallListChanged, NULL, NULL);
#endif /* WORKAROUND_FAKE_CGEV */
    } else if (strStartsWith(s, "+CMT:")) {
        RIL_onUnsolicitedResponse (
            RIL_UNSOL_RESPONSE_NEW_SMS,
            sms_pdu, strlen(sms_pdu));
    } else if (strStartsWith(s, "+CDS:")) {
        RIL_onUnsolicitedResponse (
            RIL_UNSOL_RESPONSE_NEW_SMS_STATUS_REPORT,
            sms_pdu, strlen(sms_pdu));
    } else if (strStartsWith(s, "+CGEV:")) {
        /* Really, we can ignore NW CLASS and ME CLASS events here,
         * but right now we don't since extranous
         * RIL_UNSOL_DATA_CALL_LIST_CHANGED calls are tolerated
         */
        /* can't issue AT commands here -- call on main thread */
        RIL_requestTimedCallback (onDataCallListChanged, NULL, NULL);
#ifdef WORKAROUND_FAKE_CGEV
    } else if (strStartsWith(s, "+CME ERROR: 150")) {
        RIL_requestTimedCallback (onDataCallListChanged, NULL, NULL);
#endif /* WORKAROUND_FAKE_CGEV */
    }
}
}}}

最终函数调用RIL_onUnsolicitedResponse()，通过这种方式,libril调用到了rild的RIL_onUnsolicitedResponse(）。该函数的分析请看 <a href="#tag_ril_env">【这里】</a>

至于非主动命令的处理，会在下面发送请求的部分详细分析。

总结：
通过调用at_open(）函数，rild此时有了读取AT串口设备并对数据进行处理的能力。此时可以处理AT请求及通信设备的主动上报信息。但此时mainLoop(）还没有执行完呢，接下来

==== 3.2 初始化AT设备==== 

打通串口设备数据通路后，就该对通信设备进行初始化了。这个工作是由RIL_requestTimedCallback宏完成，还记得前面调用RIL_Init(）函数时传入的RIL_Env结构吧，这个宏其实就调用了该结构的RequestTimedCallback(）函数指针。

`reference-ril.c`
{{{class="brush: c"
#define RIL_requestTimedCallback(a,b,c) s_rilenv->RequestTimedCallback(a,b,c)
}}}
你应该还记得RIL_Env的功能，他由rild定义，由libril调用，主要用于libril向rild反馈modem的主动上报信息，libril通过调用该函数，通知rild在ril_event列表中添加一个定时事件，事件具体的工作内容在userTimerCallback(）中，定的时间是TIMEVAL_0=0,即立即执行。下面看看他的具体实现：

`ril.cpp`
{{{class="brush: cpp"
extern "C" void
RIL_requestTimedCallback (RIL_TimedCallback callback, void *param,
                                const struct timeval *relativeTime) {
    internalRequestTimedCallback (callback, param, relativeTime);
}

static UserCallbackInfo *
internalRequestTimedCallback (RIL_TimedCallback callback, void *param,
                                const struct timeval *relativeTime)
{
    struct timeval myRelativeTime;
    UserCallbackInfo *p_info;

    p_info = (UserCallbackInfo *) malloc (sizeof(UserCallbackInfo));

    p_info->p_callback = callback;
    p_info->userParam = param;

    if (relativeTime == NULL) {
        /* treat null parameter as a 0 relative time */
        memset (&myRelativeTime, 0, sizeof(myRelativeTime));
    } else {
        /* FIXME I think event_add's tv param is really const anyway */
        memcpy (&myRelativeTime, relativeTime, sizeof(myRelativeTime));
    }

    //创建一个ril_event,添加到timer_list中
    ril_event_set(&(p_info->event), -1, false, userTimerCallback, p_info);

    ril_timer_add(&(p_info->event), &myRelativeTime);
    //触发s_tid_dispatch线程进行事件处理    
    triggerEvLoop();
    return p_info;
}
}}}
这里的tiggerEvLoop(）可不是在rild的s_tid_dispatch中拿来唬人的啦，当前的线程可是s_tid_mainloop,所以该函数在这里可动真刀枪了。

`ril.cpp`
{{{class="brush: cpp"
static void triggerEvLoop() {
    int ret;
    if (!pthread_equal(pthread_self(), s_tid_dispatch)) {
    //当前线程是s_tid_mainloop,所以走这里
         do {
            ret = write (s_fdWakeupWrite, " ", 1);
         } while (ret < 0 && errno == EINTR);
    }
}
}}}
tiggerEvLoop(）向s_fdWakeupWrite写入一个字节数据，s_tid_dispatch线程在望穿秋水的等待中终于等来了第一个客户，于是立马开动，遍历timer_list,里面已经有了RIL_requestTimedCallback()函数添加的ril_event,于是赶紧比较时间，发现时间预定的时间到了，于是马不停蹄，将事件从timer_list取出并添加到pending_list,并立即遍历pending_list,调用pending_list中该ril_event的回调函数userTimerCallback(），回调函数最终调用initializeCallback(）,该函数通过发送多条AT指令来初始化AT设备。

{{{class="brush: c"
static void initializeCallback(void *param)
{
    ATResponse *p_response = NULL;
    int err;

    setRadioState (RADIO_STATE_OFF);

    at_handshake();

    /* note: we don't check errors here. Everything important will
       be handled in onATTimeout and onATReaderClosed */

    /*  atchannel is tolerant of echo but it must */
    /*  have verbose result codes */
    at_send_command("ATE0Q0V1", NULL);

    /*  No auto-answer */
    at_send_command("ATS0=0", NULL);

    /*  Extended errors */
    at_send_command("AT+CMEE=1", NULL);

    /*  Network registration events */
    err = at_send_command("AT+CREG=2", &p_response);

    ......

    /* assume radio is off on error */
    if (isRadioOn() > 0) {
        setRadioState (RADIO_STATE_SIM_NOT_READY);
    }
}
}}}

==== 3.3 等待设备关闭信号 ====
mainLoop是一个无限循环，在打开AT设备并完成设备初始化后，就使用waitForClose(）函数使线程进入等待设备关闭的信号状态，当设备关闭时，再重新打开设备并初始化。

`reference-ril.c`
{{{class="brush: c"
static void waitForClose()
{
    pthread_mutex_lock(&s_state_mutex);

    //等待s_state_cond信号
    while (s_closed == 0) {
        pthread_cond_wait(&s_state_cond, &s_state_mutex);
    }

    pthread_mutex_unlock(&s_state_mutex);
}
}}}

总结：
libril提供的RIL_Init(）函数启动了一个线程：s_tid_mainloop,该线程做了三个工作：
# 打开AT串口设备
# 创建一个新的线程s_tid_reader,用来不断的读取串口发送的数据
# 初始化通信设备
# 等待串口关闭的信号，在收到这个信号后，重新进行上面的步骤1。

== 4. 监控rild socket,准备接受RILJ socket连接 ==
通过上面3步，rild已经创建了事件的处理框架，做好了准备工作，就可以打通RILJ的通路，接收RILJ发送过来的指令了。从RILJ的分析中，我们就已经知道RILJ与rild使用socket通信。rild便是RILJ的服务端。

`rild.c`
{{{class="brush: cpp"
extern "C" void
RIL_register (const RIL_RadioFunctions *callbacks) {
    int ret;
    int flags;

    ......

    //保存rillib提供的回调函数
    memcpy(&s_callbacks, callbacks, sizeof (RIL_RadioFunctions));

    s_registerCalled = 1;

    ......
    
    //获取rild socket
    s_fdListen = android_get_control_socket(SOCKET_NAME_RIL);
    if (s_fdListen < 0) {
        exit(-1);
    }

    //使socket处于被动监听状态
    ret = listen(s_fdListen, 4);

    if (ret < 0) {
        exit(-1);
    }

    ril_event_set (&s_listen_event, s_fdListen, false,
                listenCallback, NULL);

    //将监听事件添加到rild的事件循环中
    rilEventAddWakeup (&s_listen_event);
    ......
}
}}}

RIL_register使用linux的socket编程方式，创建名为SOCKET_NAME_RIL的socket,并使其处于被动监听状态，准备接受RILJ发来的socket连接，然后使用该socket为文件句柄创建了一个ril_event,通过rilEventAddWakeup(）函数通知s_tid_dispatch线程，前面说过rild创建了s_tid_dispatch线程后，该线程就在那里望穿秋水的等着s_fdWakeupRead管道有数据过来，前面处理了一次定时任务initializeCallback(）事件后，又没事可干了，现在终于又接了一单生意，我们在这里梳理一下，他是如何处理这单生意的。
# select()终于在readFds里面等来了事情，发现是s_fdWakeupRead里面有东西（注意此时仅有该句柄，新添加的s_fdListen还不在监控集合里面呢），就拿出来看看吧
# 先在timer_list里面看看有没有事情可干，发现此时里面没什么可干的
# 再去watch_table中看看吧，里面你两件事：s_wakeupfd_event和s_listen_event
# 还要看看这两件事是否都要处理，发现s_wakeupfd_event这个事情得马上处理，数据都已经发过来啦（FD_ISSET(）＝＝true），就放到待处理列表里吧，再来看看s_listen_event,这个里面还没有把具体的数据发送过来（由于刚刚建立socket监听，RILJ还没有连接请求发送过来），这件事就不必即可处理啦。
# 检查待处理列表（pending_list），依次处理里面的所有事情，调用他们的处理函数
# 处理完所有的事情后，这一轮处理就完成了
# 于是从新进行第一步，等待readFds中有事情发生，不过此时，readFds中除了s_fdWakeupRead外，又新加了一主儿s_fdListen.

由于readFds此时已经保存了s_fdListen句柄，所以当RILJ发送socket连接后，select就会从堵塞中返回，开始处理s_listen_event,等待读取socket发送过来的数据，从监听的socket中读到数据后，就创建一个命令事件s_commands_event，再添加到ril_event事件循环中去处理，命令事件的处理函数入口是processCommandsCallback().

`ril.cpp`
{{{class="brush: cpp"
static void listenCallback (int fd, short flags, void *param) {
    int is_phone_socket;
    RecordStream *p_rs;
    ......

    assert (s_fdCommand < 0);
    assert (fd == s_fdListen);

    //接受RILJ连接请求
    s_fdCommand = accept(s_fdListen, (sockaddr *) &peeraddr, &socklen);
    ......

    //创建一个RecordStream结构对象
    p_rs = record_stream_new(s_fdCommand, MAX_COMMAND_BYTES);

    //读到数据后，放到ril_event事件处理循环中处理，注意此事件persist=1
    //s_fdCommand添加到readFds中后，后续发来请求时，select(）就可以直接响应，而s_command_event又是持久存在的，所以就可以直接通过该事件的处理函数 processCommandsCallback()来处理啦。
    //而对于s_fdListen,处理完后，由于watch_list中已经没有对应的s_listen_event事件，虽然依然存在于readFds中，也无法接收新的RILJ连接了。
    ril_event_set (&s_commands_event, s_fdCommand, 1,
        processCommandsCallback, p_rs);

    rilEventAddWakeup (&s_commands_event);

    onNewCommandConnect();
}
}}}

处理发过来的数据
{{{class="brush: cpp"
static void processCommandsCallback(int fd, short flags, void *param) {
    RecordStream *p_rs;
    void *p_record;
    size_t recordlen;
    int ret;

    assert(fd == s_fdCommand);

    p_rs = (RecordStream *)param;

    //不断读取socket中的数据，直到socket关闭或读取出错
    for (;;) {
        /* loop until EAGAIN/EINTR, end of stream, or other error */
        ret = record_stream_get_next(p_rs, &p_record, &recordlen);

        if (ret == 0 && p_record == NULL) {
            /* end-of-stream */
            break;
        } else if (ret < 0) {
            break;
        } else if (ret == 0) { /* && p_record != NULL */
            //对请求进行处理
            processCommandBuffer(p_record, recordlen);
        }
    }

    //当socket被关闭时，重新添加监听
    if (ret == 0 || !(errno == EAGAIN || errno == EINTR)) {
        /* fatal error or end-of-stream */
        if (ret != 0) {
            LOGE("error on reading command socket errno:%d\n", errno);
        } else {
            LOGW("EOS.  Closing command socket.");
        }

        close(s_fdCommand);
        s_fdCommand = -1;

        //因为s_commands_event为持久事件，这里手动删除
        ril_event_del(&s_commands_event);

        record_stream_free(p_rs);

        /* start listening for new connections again */
        //重新添加s_listen_event,准备接受新的连接
        rilEventAddWakeup(&s_listen_event);

        onCommandsSocketClosed();
    }
}
}}}

从上面代码可以看出，rild在接收到RILJ的连接请求后，就不再接收RILJ新的连接请求，只有在当前的连接中断或出现读取数据错误时，才会重新准备接受RILJ新的连接请求。

RILJ发送的请求最终由processCommandBuffer(）来处理

`ril.cpp`
{{{class="brush: cpp"
processCommandBuffer(void *buffer, size_t buflen) {
    Parcel p;
    status_t status;
    int32_t request;
    int32_t token;
    RequestInfo *pRI;
    int ret;

    p.setData((uint8_t *) buffer, buflen);

    // status checked at end
    status = p.readInt32(&request); //读取请求ID
    status = p.readInt32 (&token);  //读取该请求的序列号

    if (status != NO_ERROR) {
        LOGE("invalid request block");
        return 0;
    }

    if (request < 1 || request >= (int32_t)NUM_ELEMS(s_commands)) {
        LOGE("unsupported request code %d token %d", request, token);
        // FIXME this should perhaps return a response
        return 0;
    }

    pRI = (RequestInfo *)calloc(1, sizeof(RequestInfo));

    pRI->token = token;
    pRI->pCI = &(s_commands[request]);//根据请求ID找到对应的处理函数

    ret = pthread_mutex_lock(&s_pendingRequestsMutex);
    assert (ret == 0);

    //将请求添加到请求列表中
    pRI->p_next = s_pendingRequests;
    s_pendingRequests = pRI;

    ret = pthread_mutex_unlock(&s_pendingRequestsMutex);
    assert (ret == 0);

    //调用对用的dispatchFunction()
    pRI->pCI->dispatchFunction(p, pRI);

    return 0;
}
}}}

s_commands是一个CommandInfo结构的数组，包含了ril_commands.h头文件
{{{class="brush: cpp"
static CommandInfo s_commands[] = {
#include "ril_commands.h"
};
}}}
而ril_command.h是一个映射表，包含所有rild支持的请求及对应的处理响应函数。这里的请求ID要与RILJ的RIL_Constants.java中ID号保持一致。

`ril_commands.h`
{{{class="brush: cpp"
    {0, NULL, NULL},                   //none
    {RIL_REQUEST_GET_SIM_STATUS, dispatchVoid, responseSimStatus},
    {RIL_REQUEST_ENTER_SIM_PIN, dispatchStrings, responseInts},
    {RIL_REQUEST_ENTER_SIM_PUK, dispatchStrings, responseInts},
    {RIL_REQUEST_ENTER_SIM_PIN2, dispatchStrings, responseInts},
    {RIL_REQUEST_ENTER_SIM_PUK2, dispatchStrings, responseInts},
    {RIL_REQUEST_CHANGE_SIM_PIN, dispatchStrings, responseInts},
    {RIL_REQUEST_CHANGE_SIM_PIN2, dispatchStrings, responseInts},
    {RIL_REQUEST_ENTER_NETWORK_DEPERSONALIZATION, dispatchStrings, responseInts},
    {RIL_REQUEST_GET_CURRENT_CALLS, dispatchVoid, responseCallList},
    {RIL_REQUEST_DIAL, dispatchDial, responseVoid},
    {RIL_REQUEST_GET_IMSI, dispatchVoid, responseString},
    ......
}}}

rild将RIJL发送过来的请求封装为一个RequestInfo,并添加到内部维护的RequestInfo列表中。并根据请求的ID，在s_commands中找到对应的处理函数,调用对应的dispatchXXX(）函数，该函数最终调用libril提供的onRequest(）方法将请求交到libril手中。

我们以dispatchVoid为例
{{{class="brush: cpp"
/** Callee expects NULL */
static void
dispatchVoid (Parcel& p, RequestInfo *pRI) {
    //直接调用rillib的onRequest函数，将AT指令通过rillib发送到BP
    s_callbacks.onRequest(pRI->pCI->requestNumber, NULL, 0, pRI);
}
}}}

接下来，我们深入到libril看看onRequest(）是如何将消息发送到modem并接收modem响应的。
`reference-ril.c`
{{{class="brush: c"
static void
onRequest (int request, void *data, size_t datalen, RIL_Token t)
{
    ATResponse *p_response;
    int err;

    LOGD("onRequest: %s", requestToString(request));

    /* Ignore all requests except RIL_REQUEST_GET_SIM_STATUS
     * when RADIO_STATE_UNAVAILABLE.
     */
    if (sState == RADIO_STATE_UNAVAILABLE
        && request != RIL_REQUEST_GET_SIM_STATUS
    ) {
        RIL_onRequestComplete(t, RIL_E_RADIO_NOT_AVAILABLE, NULL, 0);
        return;
    }

    /* Ignore all non-power requests when RADIO_STATE_OFF
     * (except RIL_REQUEST_GET_SIM_STATUS)
     */
    if (sState == RADIO_STATE_OFF
        && !(request == RIL_REQUEST_RADIO_POWER
            || request == RIL_REQUEST_GET_SIM_STATUS)
    ) {
        RIL_onRequestComplete(t, RIL_E_RADIO_NOT_AVAILABLE, NULL, 0);
        return;
    }

    switch (request) {
        case RIL_REQUEST_GET_SIM_STATUS: {
            RIL_CardStatus_v6 *p_card_status;
            char *p_buffer;
            int buffer_size;

            int result = getCardStatus(&p_card_status);
            if (result == RIL_E_SUCCESS) {
                p_buffer = (char *)p_card_status;
                buffer_size = sizeof(*p_card_status);
            } else {
                p_buffer = NULL;
                buffer_size = 0;
            }
            RIL_onRequestComplete(t, result, p_buffer, buffer_size);
            freeCardStatus(p_card_status);
            break;
        }
        case RIL_REQUEST_GET_CURRENT_CALLS:
            requestGetCurrentCalls(data, datalen, t);
            break;
        case RIL_REQUEST_DIAL:
            requestDial(data, datalen, t);
            break;
        case RIL_REQUEST_HANGUP:
            requestHangup(data, datalen, t);
            break;

        ......

        default:
            RIL_onRequestComplete(t, RIL_E_REQUEST_NOT_SUPPORTED, NULL, 0);
            break;
    }
}
}}}
libril根据发送过来的请求ID,调用对应的处理函数。

此处以RIL_REQUEST_GET_CURRENT_CALLS为例分析,这里终于看到了发到modem的AT指令了。

`reference-ril.c`
{{{class="brush: c"
static void requestGetCurrentCalls(void *data, size_t datalen, RIL_Token t)
{
    int err;
    ATResponse *p_response;
    ......
    //发送AT指令AT+CLCC,
    err = at_send_command_multiline ("AT+CLCC", "+CLCC:", &p_response);

    //直接处理AT命令的返回结果
    if (err != 0 || p_response->success == 0) {
        RIL_onRequestComplete(t, RIL_E_GENERIC_FAILURE, NULL, 0);
        return;
    }

    /* count the calls */
    for (countCalls = 0, p_cur = p_response->p_intermediates
            ; p_cur != NULL
            ; p_cur = p_cur->p_next
    ) {
        countCalls++;
    }

    ......

    //调用该函数将处理结果反馈给RILJ
    RIL_onRequestComplete(t, RIL_E_SUCCESS, pp_calls,
            countValidCalls * sizeof (RIL_Call *));

    at_response_free(p_response);

#ifdef POLL_CALL_STATE
    if (countValidCalls) {  // We don't seem to get a "NO CARRIER" message from
                            // smd, so we're forced to poll until the call ends.
#else
    if (needRepoll) {
#endif
        RIL_requestTimedCallback (sendCallStateChanged, NULL, &TIMEVAL_CALLSTATEPOLL);
    }

    return;
error:
    RIL_onRequestComplete(t, RIL_E_GENERIC_FAILURE, NULL, 0);
    at_response_free(p_response);
}
}}}
函数调用了at_send_command_multiline(）来将AT命令发送到modem,参数p_responese用来保存返回的数据结果。接着往下跟:

`atchannel.c`
{{{class="brush: c"
int at_send_command_multiline (const char *command,
                                const char *responsePrefix,
                                 ATResponse **pp_outResponse)
{
    int err;

    err = at_send_command_full (command, MULTILINE, responsePrefix,
                                    NULL, 0, pp_outResponse);

    return err;
}

static int at_send_command_full (const char *command, ATCommandType type,
                    const char *responsePrefix, const char *smspdu,
                    long long timeoutMsec, ATResponse **pp_outResponse)
{
    /**
    * command: 表示发送的AT指令
    * 
    * type:用来标示期望的命令返回格式类型
    * typedef enum {
    *     NO_RESULT,   /* no intermediate response expected */
    *     NUMERIC,     /* a single intermediate response starting with a 0-9 */
    *     SINGLELINE,  /* a single intermediate response starting with a prefix */
    *     MULTILINE    /* multiple line intermediate response
    *                     starting with a prefix */
    * } ATCommandType;
    * 
    * responsePrefix: 反馈结果的前缀
    * timeoutMsec:
      超时时间，如果为0,表示无限等待modem反馈，如果不为0,则在timeoutMsec时间无响应后返回。
    * pp_outResponse:   用来保存反馈的结果
    */

    int err;

    if (0 != pthread_equal(s_tid_reader, pthread_self())) {
        /* cannot be called from reader thread */
        return AT_ERROR_INVALID_THREAD;
    }

    pthread_mutex_lock(&s_commandmutex);
    //发送命令
    err = at_send_command_full_nolock(command, type,
                    responsePrefix, smspdu,
                    timeoutMsec, pp_outResponse);

    pthread_mutex_unlock(&s_commandmutex);

    if (err == AT_ERROR_TIMEOUT && s_onTimeout != NULL) {
        s_onTimeout();
    }

    return err;
}

static int at_send_command_full_nolock (const char *command, ATCommandType type,
                    const char *responsePrefix, const char *smspdu,
                    long long timeoutMsec, ATResponse **pp_outResponse)
{
    int err = 0;
#ifndef USE_NP
    struct timespec ts;
#endif /*USE_NP*/

    //sp_response是一个全局变量，发送命令给modem时创建，从modem获取命令时置为null,如果发送命令时不为NULL,表示前一条命令未处理完毕。
    if(sp_response != NULL) {
        err = AT_ERROR_COMMAND_PENDING;
        goto error;
    }

    //将命令通过串口设备写入modem
    err = writeline (command);

    if (err < 0) {
        goto error;
    }

    s_type = type;
    s_responsePrefix = responsePrefix;
    s_smsPDU = smspdu;
    sp_response = at_response_new();

#ifndef USE_NP
    if (timeoutMsec != 0) {
        setTimespecRelative(&ts, timeoutMsec);
    }
#endif /*USE_NP*/

    //1
    等待处理结果，modem处理完该请求后，finalResponse就包含命令的处理结果
    while (sp_response->finalResponse == NULL && s_readerClosed == 0) {
        if (timeoutMsec != 0) {
#ifdef USE_NP
            err = pthread_cond_timeout_np(&s_commandcond, &s_commandmutex, timeoutMsec);
#else
            err = pthread_cond_timedwait(&s_commandcond, &s_commandmutex, &ts);
#endif /*USE_NP*/
        } else {
            //等待s_tid_reader线程发送s_commandcond,表示请求已经处理完
            err = pthread_cond_wait(&s_commandcond, &s_commandmutex);
        }

        if (err == ETIMEDOUT) {
            err = AT_ERROR_TIMEOUT;
            goto error;
        }
    }

    //将AT反馈结果返回
    if (pp_outResponse == NULL) {
        at_response_free(sp_response);
    } else {
        /* line reader stores intermediate responses in reverse order */
        reverseIntermediates(sp_response);
        *pp_outResponse = sp_response;
    }

    sp_response = NULL;

    if(s_readerClosed > 0) {
        err = AT_ERROR_CHANNEL_CLOSED;
        goto error;
    }

    err = 0;
error:
    clearPendingCommand();

    return err;
}
}}}
在使用writeLine(）将AT命令发送到串口后，函数便开始等待信号s_commandcond来获取命令的处理结果。而该信号又是在何时何地发送的呢？

大家是否记得前面讲到的rild调用libril的RIL_Init(）函数，创建的s_tid_reader线程，该线程用于读取modem发送过来的数据，自然也包括命令的反馈结果啦。如果记不太清楚了，请点击 <a href="#tag_s_tid_reader">【这里】</a>。

处理完发过来的请求后，通过RIL_onRequestComplete()函数将命令的处理结果发送给RILJ,该函数的分析请看这里<a href="#tag_onrequestcomplete">【这里】</a>

下面对主动命令和非主动命令的处理流程做个整理
- 非主动命令SOLICITED COMMAND
    # rild 打开rild
      socket等待RILJ的连接，获得RILJ的连接请求后，调用processCommandsCallback()从socket读取数据
    # 调用processCommandBuffer(),在s_commands数组中找到该请求对应的dispatchFunction(）函数并调用
    # dispatchXXX(）函数调用libril提供的onRequest(）函数，将请求发送到libril处理
    # onRequest(）根据请求ID,发送具体的AT指令到modem,并等待modem处理结果
    # rild通过libril的RIL_Init(）函数创建的线程s_tid_reader以行格式读取modem反馈的结果，调用processLine（）处理
    # 调用handleFinalResponse(）函数，通知等待的onRequest(）函数AT命令处理结果已经返回。  
    # onRequest调用RIL_onRequestComplete(）函数将处理结果及信息发送到rild
    # RIL_onRequestComplete(）调用对应请求的responseFunction(）对结果进行处理，组成Parcel对象
    # 调用sendResponse(）将Parcel对象通过socket发送到RILJ

- 主动命令UNSOLICITED COMMAND
    # rild通过libril提供的RIL_Init(）创建的s_tid_reader线程监控modem发过来的数据
    # s_tid_reader(）调用processLine(）对发过来的每行数据进行处理，对主动命令，调用handleUnsolicited(）函数
    # handleUnsolicited(）函数调用onUnsolicited(）函数
    # onUnsolicited（）函数调用RIL_onUnsolicitedResponse(）函数将处理结果发送到RILJ

分析完毕。
有图有真相：
　
{../../../public/images/rild-commands-sequents.png}}

最后附上android 4.0 抓取的log,有兴趣的可以看看
{{{class="brush: c"
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
D/RILD    (   32): overriding with -s /dev/socket/qemud
D/RILD    (   32): rild main: 1 RIL_StartEventLoop
D/RILC    (   32): RIL_StartEventLoop...start, start eventLoop
D/RILC    (   32): eventLoop enter
D/RILC    (   32): RIL_StartEventLoop...end
D/RILD    (   32): rild main: 2 Ril_Init
I/RIL     (   32): Opening socket /dev/socket/qemud
D/RILD    (   32): rild main: 3 RIL_register
D/RILC    (   32): RIL_register enter
E/RILC    (   32): RIL_register: RIL version 6
D/RILC    (   32): RIL_Register add & wake s_listen_event
D/RILC    (   32): ~~~~ ril_event_set 4009d954 ~~~~
D/RILC    (   32): ~~~~ +ril_event_add ~~~~
D/RILC    (   32): ~~~~ added at 0 ~~~~
D/RILC    (   32): ~~~~ Event 4009d954 ~~~~
D/RILC    (   32):      next    = 0
D/RILC    (   32):      prev    = 0
D/RILC    (   32):      fd      = 10
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40098eb5
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ nfds = 11 ~~~~
D/RILC    (   32): ~~~~ -ril_event_add ~~~~
D/RILC    (   32): RIL_Register add & wake s_debug_event
D/RILC    (   32): ~~~~ ril_event_set 4009d930 ~~~~
D/RILC    (   32): ~~~~ +ril_event_add ~~~~
D/RILC    (   32): ~~~~ added at 1 ~~~~
D/RILC    (   32): ~~~~ Event 4009d930 ~~~~
D/RILC    (   32):      next    = 0
D/RILC    (   32):      prev    = 0
D/RILC    (   32):      fd      = 9
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400979c1
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ nfds = 11 ~~~~
D/RILC    (   32): ~~~~ -ril_event_add ~~~~
D/RILC    (   32): eventLoop set && add s_wakeupfd_event
D/RILC    (   32): ~~~~ ril_event_set 4009d900 ~~~~
D/RILC    (   32): ~~~~ +ril_event_add ~~~~
D/RILC    (   32): ~~~~ added at 2 ~~~~
D/RILC    (   32): ~~~~ Event 4009d900 ~~~~
D/RILC    (   32):      next    = 0
D/RILC    (   32):      prev    = 0
D/RILC    (   32):      fd      = 6
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400996fd
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ nfds = 11 ~~~~
D/RILC    (   32): ~~~~ -ril_event_add ~~~~
D/RILC    (   32): eventLoop start loop
D/RILC    (   32): ril_event_loop start
D/RILC    (   32): ril_event_loop loop_id(0)
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b388 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b388 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 9s + 135442us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b380
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 9s + 136091us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b388 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 9s + 135442us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b380
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b388 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 9s + 135442us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b380
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (10), fd is set (0)
D/RILC    (   32): rev is (9), fd is set (0)
D/RILC    (   32): rev is (6), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d900 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = b388
D/RILC    (   32):      fd      = 6
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400996fd
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b388 ~~~~
D/RILC    (   32):      next    = 4009d900
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 9s + 135442us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b380
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [UNSL]< UNSOL_RESPONSE_RADIO_STATE_CHANGED  {RADIO_OFF}
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b3d0 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b3d0 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 139418us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b3c8
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/AT      (   32): AT> ATE0Q0V1
D/AT      (   32): AT< OK
D/AT      (   32): AT> ATE0Q0V1
D/AT      (   32): AT< OK
D/AT      (   32): AT> ATS0=0
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CMEE=1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CREG=2
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGREG=1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CCWA=1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CMOD=0
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CMUT=0
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CSSN=0,1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+COLP=0
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CSCS="HEX"
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CUSD=1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGEREP=1,0
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CMGF=0
D/AT      (   32): AT< %CTZV: 13/10/29:01:06:50+32:0:posix!Asia!Shanghai
D/RILC    (   32): [UNSL]< UNSOL_NITZ_TIME_RECEIVED {13/10/29:01:06:50+32:0:posix!Asia!Shanghai}
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b4b8 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b4b8 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = b3d0
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 414341us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CFUN?
D/AT      (   32): AT< +CFUN: 0
D/AT      (   32): AT< OK
D/RILC    (   32): fire event(6)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d900 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 6
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400996fd
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(1)
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 9s + 416677us ~~~~
D/RILC    (   32): ~~~~ next = 10s + 139418us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 722741us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 10s + 140464us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b3d0 ~~~~
D/RILC    (   32):      next    = b4b8
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 139418us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b3c8
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b3d0 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 139418us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b3c8
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b3d0 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 139418us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b3c8
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(2)
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 10s + 141709us ~~~~
D/RILC    (   32): ~~~~ next = 10s + 414341us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 272632us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 10s + 415980us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b4b8 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 414341us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b4b8 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 414341us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b4b8 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 10s + 414341us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(3)
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILB    (  167): /proc/cmdline=qemu.gles=0 qemu=1 console=ttyS0 android.qemud=ttyS1 android.checkjni=1 ndns=3
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
I/PHONE   (  167): Network Mode set to 0
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
I/PHONE   (  167): lteOnCdma is 0 use SUBSCRIPTION_FROM_NV
I/PHONE   (  167): Cdma Subscription set to 1
D/RILJ    (  167): RIL(context, preferredNetworkType=0 cdmaSubscription=1)
D/RILJ    (  167): Starting RILReceiver
I/PHONE   (  167): Creating GSMPhone
D/RILC    (   32): DON: fd=10 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 32s + 144000us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (10), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d954 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 10
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40098eb5
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ nfds = 10 ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(10)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d954 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 10
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40098eb5
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): listen Callback waiting for RILJ socket connect
D/RILC    (   32): accept RILJ socket connect
I/RILC    (   32): libril: new connection
D/RILC    (   32): get stream from socket
D/RILC    (   32): add && set s_commands_event
D/RILC    (   32): ~~~~ ril_event_set 4009d98c ~~~~
D/RILC    (   32): ~~~~ +ril_event_add ~~~~
D/RILC    (   32): ~~~~ added at 0 ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 0
D/RILC    (   32):      prev    = 0
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ nfds = 18 ~~~~
D/RILC    (   32): ~~~~ -ril_event_add ~~~~
D/RILC    (   32): [UNSL]< UNSOL_RIL_CONNECTED {6}
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b508 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b508 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 146910us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b500
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/RILC    (   32): [UNSL]< UNSOL_RESPONSE_RADIO_STATE_CHANGED  {RADIO_OFF}
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b550 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b550 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = b508
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 147617us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b548
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
I/RILC    (   32): RIL Daemon version: android reference-ril 1.0
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(4)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 32s + 163275us ~~~~
D/RILC    (   32): ~~~~ next = 33s + 146910us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 983635us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
I/RILJ    (  167): Connected to 'rild' socket
D/RILJ    (  167): [UNSL]< UNSOL_RIL_CONNECTED {6}
D/RILJ    (  167): [0000]> RADIO_POWER off
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 32s + 263374us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0000]> RADIO_POWER (0)
D/RIL     (   32): onRequest: RADIO_POWER
D/RILC    (   32): [0000]< RADIO_POWER
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(5)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 32s + 265330us ~~~~
D/RILC    (   32): ~~~~ next = 33s + 146910us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 881580us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0001]> REQUEST_SET_PREFERRED_NETWORK_TYPE : 0
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 32s + 288438us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0001]> SET_PREFERRED_NETWORK_TYPE (0)
D/RIL     (   32): onRequest: SET_PREFERRED_NETWORK_TYPE
D/RILC    (   32): [0001]< SET_PREFERRED_NETWORK_TYPE fails by E_RAIDO_NOT_AVAILABLE
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(6)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 32s + 289782us ~~~~
D/RILC    (   32): ~~~~ next = 33s + 146910us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 857128us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0002]> RIL_REQUEST_CDMA_SET_SUBSCRIPTION_SOURCE : 1
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 32s + 295534us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0002]> CDMA_SET_SUBSCRIPTION_SOURCE (1)
D/RIL     (   32): onRequest: CDMA_SET_SUBSCRIPTION_SOURCE
D/RILC    (   32): [0002]< CDMA_SET_SUBSCRIPTION_SOURCE fails by E_RAIDO_NOT_AVAILABLE
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(7)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 32s + 297590us ~~~~
D/RILC    (   32): ~~~~ next = 33s + 146910us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 849320us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [UNSL]< UNSOL_RESPONSE_RADIO_STATE_CHANGED RADIO_OFF
D/RILB    (  167): Notifying: radio available
D/RILJ    (  167): [0003]> SCREEN_STATE: true
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 32s + 316404us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0003]> SCREEN_STATE (1)
D/RIL     (   32): onRequest: SCREEN_STATE
D/RILC    (   32): [0003]< SCREEN_STATE fails by E_RAIDO_NOT_AVAILABLE
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(8)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 32s + 317707us ~~~~
D/RILC    (   32): ~~~~ next = 33s + 146910us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 829203us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILJ    (  167): [UNSL]< UNSOL_NITZ_TIME_RECEIVED 13/10/29:01:06:50+32:0:posix!Asia!Shanghai
D/RILJ    (  167): [0000]< RADIO_POWER 
D/RILJ    (  167): [0001]< REQUEST_SET_PREFERRED_NETWORK_TYPE error: com.android.internal.telephony.CommandException: RADIO_NOT_AVAILABLE
D/RILJ    (  167): [0002]< RIL_REQUEST_CDMA_SET_SUBSCRIPTION_SOURCE error: com.android.internal.telephony.CommandException: RADIO_NOT_AVAILABLE
D/RILJ    (  167): [0003]< SCREEN_STATE error: com.android.internal.telephony.CommandException: RADIO_NOT_AVAILABLE
D/PHONE   (  167): mDoesRilSendMultipleCallRing=true
D/PHONE   (  167): mCallRingDelay=3000
D/RILJ    (  167): setPhoneType=1 old value=0
D/SMS     (  167): SMSDispatcher: ctor mSmsCapable=true format=3gpp mSmsReceiveDisabled=false mSmsSendDisabled=false
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 33s + 149296us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b508 ~~~~
D/RILC    (   32):      next    = b550
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 146910us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b500
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b508 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 146910us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b500
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b550 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 147617us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b548
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b550 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = b508
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 147617us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b548
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b508 ~~~~
D/RILC    (   32):      next    = b550
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 146910us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b500
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b550 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 33s + 147617us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b548
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(9)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
W/GSM     (  167): Can't open /system/etc/voicemail-conf.xml
W/GSM     (  167): Can't open /system/etc/spn-conf.xml
D/GSM     (  167): [ApnContext] set mDependencyMet as false, for type default, current state is true
D/GSM     (  167): [ApnContext] set enabled as true, for type default, current state is false
D/GSM     (  167): [GsmDCT] applyNewState(default, true(true), true(false))
D/GSM     (  167): [ApnContext] set reason as dependencyMet, for type default,current state IDLE
D/GSM     (  167): [ApnContext] set enabled as true, for type default, current state is true
D/GSM     (  167): [ApnContext] set mDependencyMet as true, for type default, current state is false
D/GSM     (  167): [GsmDCT] trySetupData for type:default due to dependencyMet
D/GSM     (  167): [GsmDCT] trySetupData with mIsPsRestricted=false
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=IDLE apnType=default
D/GSM     (  167): [ApnContext] set mDependencyMet as false, for type mms, current state is true
D/GSM     (  167): [GsmDCT] applyNewState(mms, false(false), true(false))
D/GSM     (  167): [ApnContext] set enabled as false, for type mms, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as true, for type mms, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as false, for type supl, current state is true
D/GSM     (  167): [GsmDCT] applyNewState(supl, false(false), true(false))
D/GSM     (  167): [ApnContext] set enabled as false, for type supl, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as true, for type supl, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as false, for type hipri, current state is true
D/GSM     (  167): [GsmDCT] applyNewState(hipri, false(false), true(false))
D/GSM     (  167): [ApnContext] set enabled as false, for type hipri, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as true, for type hipri, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as false, for type fota, current state is true
D/GSM     (  167): [GsmDCT] applyNewState(fota, false(false), true(false))
D/GSM     (  167): [ApnContext] set enabled as false, for type fota, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as true, for type fota, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as false, for type ims, current state is true
D/GSM     (  167): [GsmDCT] applyNewState(ims, false(false), true(false))
D/GSM     (  167): [ApnContext] set enabled as false, for type ims, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as true, for type ims, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as false, for type cbs, current state is true
D/GSM     (  167): [GsmDCT] applyNewState(cbs, false(false), true(false))
D/GSM     (  167): [ApnContext] set enabled as false, for type cbs, current state is false
D/GSM     (  167): [ApnContext] set mDependencyMet as true, for type cbs, current state is false
D/RILJ    (  167): [0004]> RADIO_POWER on
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 35s + 184764us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0004]> RADIO_POWER (1)
D/RIL     (   32): onRequest: RADIO_POWER
D/AT      (   32): AT> AT+CFUN=1
D/AT      (   32): AT< OK
D/RILC    (   32): [UNSL]< UNSOL_RESPONSE_RADIO_STATE_CHANGED  {RADIO_SIM_NOT_READY}
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b538 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b538 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 187007us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b530
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/AT      (   32): AT> AT+CPIN?
D/AT      (   32): AT< +CPIN: READY
D/RILJ    (  167): [UNSL]< UNSOL_RESPONSE_RADIO_STATE_CHANGED SIM_NOT_READY
D/RILB    (  167): Notifying: Radio On
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/AT      (   32): AT< OK
D/RILC    (   32): [UNSL]< UNSOL_RESPONSE_RADIO_STATE_CHANGED  {RADIO_SIM_READY}
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b570 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b570 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = b538
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 202089us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b568
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/AT      (   32): AT> AT+CSMS=1
D/AT      (   32): AT< +CSMS: 1, 1, 1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CNMI=1,2,2,1,1
D/AT      (   32): AT< OK
D/RILC    (   32): [0004]< RADIO_POWER
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(10)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 35s + 203829us ~~~~
D/RILC    (   32): ~~~~ next = 36s + 187007us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 983178us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [UNSL]< UNSOL_RESPONSE_RADIO_STATE_CHANGED SIM_READY
D/RILB    (  167): Notifying: SIM ready
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILJ    (  167): [0004]< RADIO_POWER 
D/RILJ    (  167): [0005]> OPERATOR
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 35s + 267051us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0005]> OPERATOR 
D/RIL     (   32): onRequest: OPERATOR
D/AT      (   32): AT> AT+COPS=3,0;+COPS?;+COPS=3,1;+COPS?;+COPS=3,2;+COPS?
D/AT      (   32): AT< +COPS: 0,0,"Android"
D/AT      (   32): AT< +COPS: 0,1,"Android"
D/AT      (   32): AT< +COPS: 0,2,"310260"
D/AT      (   32): AT< OK
D/RILC    (   32): [0005]< OPERATOR {Android,Android,310260}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(11)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 35s + 269521us ~~~~
D/RILC    (   32): ~~~~ next = 36s + 187007us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 917486us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0005]< OPERATOR {Android, Android, 310260}
D/RILJ    (  167): [0006]> DATA_REGISTRATION_STATE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 35s + 294808us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0006]> DATA_REGISTRATION_STATE 
D/RIL     (   32): onRequest: DATA_REGISTRATION_STATE
D/AT      (   32): AT> AT+CGREG?
D/AT      (   32): AT< +CGREG: 1,1,"ffffffff","ffffffff","0003"
D/AT      (   32): AT< OK
D/RILC    (   32): [0006]< DATA_REGISTRATION_STATE {1,ffffffff,ffffffff,3}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(12)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 35s + 297134us ~~~~
D/RILC    (   32): ~~~~ next = 36s + 187007us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 889873us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0006]< DATA_REGISTRATION_STATE {1, ffffffff, ffffffff, 3}
D/RILJ    (  167): [0007]> VOICE_REGISTRATION_STATE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 35s + 312705us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0007]> VOICE_REGISTRATION_STATE 
D/RIL     (   32): onRequest: VOICE_REGISTRATION_STATE
D/AT      (   32): AT> AT+CREG?
D/AT      (   32): AT< +CREG: 2,1, "ffffffff", "ffffffff"
D/AT      (   32): AT< OK
D/RILC    (   32): [0007]< VOICE_REGISTRATION_STATE {1,ffffffff,ffffffff}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(13)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 35s + 314663us ~~~~
D/RILC    (   32): ~~~~ next = 36s + 187007us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 872344us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0007]< VOICE_REGISTRATION_STATE {1, ffffffff, ffffffff}
D/RILJ    (  167): [0008]> QUERY_NETWORK_SELECTION_MODE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 35s + 363001us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0008]> QUERY_NETWORK_SELECTION_MODE 
D/RIL     (   32): onRequest: QUERY_NETWORK_SELECTION_MODE
D/AT      (   32): AT> AT+COPS?
D/AT      (   32): AT< +COPS: 0,2,310260
D/AT      (   32): AT< OK
D/RILC    (   32): [0008]< QUERY_NETWORK_SELECTION_MODE {0}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(14)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 35s + 365021us ~~~~
D/RILC    (   32): ~~~~ next = 36s + 187007us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 821986us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0008]< QUERY_NETWORK_SELECTION_MODE {0}
D/GSM     (  167): [GsmSST] NITZ: 13/10/29:01:06:50+32:0:posix!Asia!Shanghai,9413 start=35368 delay=25955
I/GSM     (  167): NITZ: after Setting time of day
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270337 when=-1s983ms obj=android.os.AsyncResult@4103b908 }
D/GSM     (  167): [GsmDCT] onRadioAvailable
D/GSM     (  167): [GsmDCT] overall state is IDLE
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270342 when=-2s1ms obj=android.os.AsyncResult@4103b9b0 }
D/GSM     (  167): [GsmDCT] onRadioOffOrNotAvailable: is off and clean up all connections
D/GSM     (  167): [GsmDCT] cleanUpAllConnections: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] set reason as radioTurnedOff, for type fota,current state IDLE
D/GSM     (  167): [GsmDCT] cleanUpConnection: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] setState: IDLE for type fota, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [ApnContext] set reason as radioTurnedOff, for type supl,current state IDLE
D/GSM     (  167): [GsmDCT] cleanUpConnection: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] setState: IDLE for type supl, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [ApnContext] set reason as radioTurnedOff, for type hipri,current state IDLE
D/GSM     (  167): [GsmDCT] cleanUpConnection: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] setState: IDLE for type hipri, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmSST] NITZ: Setting time of day to Tue Oct 29 01:07:16 GMT+00:00 2013 NITZ receive delay(ms): 26059 gained(ms): -397 from 13/10/29:01:06:50+32:0:posix!Asia!Shanghai
D/GSM     (  167): [ApnContext] set reason as radioTurnedOff, for type ims,current state IDLE
D/GSM     (  167): [GsmDCT] cleanUpConnection: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] setState: IDLE for type ims, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [ApnContext] set reason as radioTurnedOff, for type default,current state IDLE
D/GSM     (  167): [GsmDCT] cleanUpConnection: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] setState: IDLE for type default, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(default): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=true apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:default
D/GSM     (  167): [ApnContext] set reason as radioTurnedOff, for type mms,current state IDLE
D/GSM     (  167): [GsmDCT] cleanUpConnection: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] setState: IDLE for type mms, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [ApnContext] set reason as radioTurnedOff, for type cbs,current state IDLE
D/GSM     (  167): [GsmDCT] cleanUpConnection: tearDown=false reason=radioTurnedOff
D/GSM     (  167): [ApnContext] setState: IDLE for type cbs, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 36s + 190404us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b538 ~~~~
D/RILC    (   32):      next    = b570
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 187007us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b530
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b538 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 187007us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b530
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b538 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 187007us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b530
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(15)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 36s + 192023us ~~~~
D/RILC    (   32): ~~~~ next = 36s + 202089us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 10066us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/GSM     (  167): [GsmDCT] stopNetStatPoll
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:fota
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 36s + 203195us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b570 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 202089us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b568
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b570 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 202089us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b568
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b570 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 36s + 202089us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b568
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(16)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:supl
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:hipri
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:ims
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=IDLE apnType=default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:mms
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:cbs
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270345 when=-3s36ms obj=android.os.AsyncResult@410793e0 }
D/GSM     (  167): [GsmDCT] onDataConnectionDetached: stop polling and notify detached
D/GSM     (  167): [GsmDCT] stopNetStatPoll
D/GSM     (  167): [GsmDCT] notifyDataConnection: reason=dataDetached
D/GSM     (  167): [GsmDCT] notifyDataConnection: type:default
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(default): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=true apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:fota
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:supl
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:hipri
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:ims
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=IDLE apnType=default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:mms
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:cbs
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270348 when=-3s496ms obj=android.os.AsyncResult@41079538 }
D/GSM     (  167): [GsmDCT] onRoamingOff
D/GSM     (  167): [GsmDCT] notifyDataConnection: reason=roamingOff
D/GSM     (  167): [GsmDCT] notifyDataConnection: type:default
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(default): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=true apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:fota
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:supl
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:hipri
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:ims
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=IDLE apnType=default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:mms
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:cbs
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - gprs= 1 - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/GSM     (  167): [IccCard] Broadcasting intent ACTION_SIM_STATE_CHANGED NOT_READY reason null
D/RILJ    (  167): [0009]> BASEBAND_VERSION
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 37s + 804117us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0009]> BASEBAND_VERSION 
D/RIL     (   32): onRequest: BASEBAND_VERSION
D/RILC    (   32): [0009]< BASEBAND_VERSION fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(17)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0009]< BASEBAND_VERSION error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILJ    (  167): [0010]> GET_IMEI
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 37s + 830895us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0010]> GET_IMEI 
D/RIL     (   32): onRequest: GET_IMEI
D/AT      (   32): AT> AT+CGSN
D/AT      (   32): AT< 000000000000000
D/AT      (   32): AT< OK
D/RILC    (   32): [0010]< GET_IMEI {000000000000000}
D/RILJ    (  167): [0010]< GET_IMEI 
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(18)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0011]> GET_IMEISV
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 37s + 955299us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0011]> GET_IMEISV 
D/RIL     (   32): onRequest: GET_IMEISV
D/RILC    (   32): [0011]< GET_IMEISV fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(19)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0011]< GET_IMEISV error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILJ    (  167): [0012]> OPERATOR
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 111048us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0012]> OPERATOR 
D/RIL     (   32): onRequest: OPERATOR
D/AT      (   32): AT> AT+COPS=3,0;+COPS?;+COPS=3,1;+COPS?;+COPS=3,2;+COPS?
D/AT      (   32): AT< +COPS: 0,0,"Android"
D/AT      (   32): AT< +COPS: 0,1,"Android"
D/AT      (   32): AT< +COPS: 0,2,"310260"
D/AT      (   32): AT< OK
D/RILC    (   32): [0012]< OPERATOR {Android,Android,310260}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(20)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0012]< OPERATOR {Android, Android, 310260}
D/RILJ    (  167): [0013]> DATA_REGISTRATION_STATE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 125858us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0013]> DATA_REGISTRATION_STATE 
D/RIL     (   32): onRequest: DATA_REGISTRATION_STATE
D/AT      (   32): AT> AT+CGREG?
D/AT      (   32): AT< +CGREG: 1,1,"ffffffff","ffffffff","0003"
D/AT      (   32): AT< OK
D/RILC    (   32): [0013]< DATA_REGISTRATION_STATE {1,ffffffff,ffffffff,3}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(21)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0013]< DATA_REGISTRATION_STATE {1, ffffffff, ffffffff, 3}
D/RILJ    (  167): [0014]> VOICE_REGISTRATION_STATE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 156326us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0014]> VOICE_REGISTRATION_STATE 
D/RIL     (   32): onRequest: VOICE_REGISTRATION_STATE
D/AT      (   32): AT> AT+CREG?
D/AT      (   32): AT< +CREG: 2,1, "ffffffff", "ffffffff"
D/AT      (   32): AT< OK
D/RILC    (   32): [0014]< VOICE_REGISTRATION_STATE {1,ffffffff,ffffffff}
D/RILJ    (  167): [0014]< VOICE_REGISTRATION_STATE {1, ffffffff, ffffffff}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(22)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0015]> QUERY_NETWORK_SELECTION_MODE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 187632us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0015]> QUERY_NETWORK_SELECTION_MODE 
D/RIL     (   32): onRequest: QUERY_NETWORK_SELECTION_MODE
D/AT      (   32): AT> AT+COPS?
D/AT      (   32): AT< +COPS: 0,2,310260
D/AT      (   32): AT< OK
D/RILC    (   32): [0015]< QUERY_NETWORK_SELECTION_MODE {0}
D/RILJ    (  167): [0015]< QUERY_NETWORK_SELECTION_MODE {0}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(23)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0016]> GET_CURRENT_CALLS
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 205262us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0016]> GET_CURRENT_CALLS 
D/RIL     (   32): onRequest: GET_CURRENT_CALLS
D/AT      (   32): AT> AT+CLCC
D/AT      (   32): AT< OK
D/RILC    (   32): [0016]< GET_CURRENT_CALLS }
D/RILJ    (  167): [0016]< GET_CURRENT_CALLS  
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(24)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0017]> OPERATOR
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 217956us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0017]> OPERATOR 
D/RIL     (   32): onRequest: OPERATOR
D/AT      (   32): AT> AT+COPS=3,0;+COPS?;+COPS=3,1;+COPS?;+COPS=3,2;+COPS?
D/AT      (   32): AT< +COPS: 0,0,"Android"
D/AT      (   32): AT< +COPS: 0,1,"Android"
D/AT      (   32): AT< +COPS: 0,2,"310260"
D/AT      (   32): AT< OK
D/RILC    (   32): [0017]< OPERATOR {Android,Android,310260}
D/RILJ    (  167): [0017]< OPERATOR {Android, Android, 310260}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(25)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0018]> DATA_REGISTRATION_STATE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 237825us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0018]> DATA_REGISTRATION_STATE 
D/RIL     (   32): onRequest: DATA_REGISTRATION_STATE
D/AT      (   32): AT> AT+CGREG?
D/AT      (   32): AT< +CGREG: 1,1,"ffffffff","ffffffff","0003"
D/AT      (   32): AT< OK
D/RILC    (   32): [0018]< DATA_REGISTRATION_STATE {1,ffffffff,ffffffff,3}
D/RILJ    (  167): [0018]< DATA_REGISTRATION_STATE {1, ffffffff, ffffffff, 3}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(26)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0019]> VOICE_REGISTRATION_STATE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 311122us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0019]> VOICE_REGISTRATION_STATE 
D/RIL     (   32): onRequest: VOICE_REGISTRATION_STATE
D/AT      (   32): AT> AT+CREG?
D/AT      (   32): AT< +CREG: 2,1, "ffffffff", "ffffffff"
D/AT      (   32): AT< OK
D/RILC    (   32): [0019]< VOICE_REGISTRATION_STATE {1,ffffffff,ffffffff}
D/RILJ    (  167): [0019]< VOICE_REGISTRATION_STATE {1, ffffffff, ffffffff}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(27)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0020]> QUERY_NETWORK_SELECTION_MODE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 320786us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0020]> QUERY_NETWORK_SELECTION_MODE 
D/RIL     (   32): onRequest: QUERY_NETWORK_SELECTION_MODE
D/AT      (   32): AT> AT+COPS?
D/AT      (   32): AT< +COPS: 0,2,310260
D/AT      (   32): AT< OK
D/RILC    (   32): [0020]< QUERY_NETWORK_SELECTION_MODE {0}
D/RILJ    (  167): [0020]< QUERY_NETWORK_SELECTION_MODE {0}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(28)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0021]> SET_NETWORK_SELECTION_AUTOMATIC
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 352126us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0021]> SET_NETWORK_SELECTION_AUTOMATIC 
D/RIL     (   32): onRequest: SET_NETWORK_SELECTION_AUTOMATIC
D/AT      (   32): AT> AT+COPS=0
D/AT      (   32): AT< OK
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(29)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0022]> OPERATOR
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 369553us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0022]> OPERATOR 
D/RIL     (   32): onRequest: OPERATOR
D/AT      (   32): AT> AT+COPS=3,0;+COPS?;+COPS=3,1;+COPS?;+COPS=3,2;+COPS?
D/AT      (   32): AT< +COPS: 0,0,"Android"
D/AT      (   32): AT< +COPS: 0,1,"Android"
D/AT      (   32): AT< +COPS: 0,2,"310260"
D/AT      (   32): AT< OK
D/RILC    (   32): [0022]< OPERATOR {Android,Android,310260}
D/RILJ    (  167): [0022]< OPERATOR {Android, Android, 310260}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(30)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0023]> DATA_REGISTRATION_STATE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 387943us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILJ    (  167): [0024]> VOICE_REGISTRATION_STATE
D/RILC    (   32): [0023]> DATA_REGISTRATION_STATE 
D/RIL     (   32): onRequest: DATA_REGISTRATION_STATE
D/AT      (   32): AT> AT+CGREG?
D/AT      (   32): AT< +CGREG: 1,1,"ffffffff","ffffffff","0003"
D/AT      (   32): AT< OK
D/RILC    (   32): [0023]< DATA_REGISTRATION_STATE {1,ffffffff,ffffffff,3}
D/RILJ    (  167): [0023]< DATA_REGISTRATION_STATE {1, ffffffff, ffffffff, 3}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(31)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 438049us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0024]> VOICE_REGISTRATION_STATE 
D/RIL     (   32): onRequest: VOICE_REGISTRATION_STATE
D/AT      (   32): AT> AT+CREG?
D/AT      (   32): AT< +CREG: 2,1, "ffffffff", "ffffffff"
D/AT      (   32): AT< OK
D/RILJ    (  167): [0025]> QUERY_NETWORK_SELECTION_MODE
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/GSM     (  167): [IccCard] Broadcasting intent ACTION_SIM_STATE_CHANGED READY reason null
D/RILC    (   32): [0024]< VOICE_REGISTRATION_STATE {1,ffffffff,ffffffff}
D/RILJ    (  167): [0024]< VOICE_REGISTRATION_STATE {1, ffffffff, ffffffff}
D/RILC    (   32): [0025]> QUERY_NETWORK_SELECTION_MODE 
D/RIL     (   32): onRequest: QUERY_NETWORK_SELECTION_MODE
D/AT      (   32): AT> AT+COPS?
D/AT      (   32): AT< +COPS: 0,2,310260
D/AT      (   32): AT< OK
D/RILC    (   32): [0025]< QUERY_NETWORK_SELECTION_MODE {0}
D/RILJ    (  167): [0025]< QUERY_NETWORK_SELECTION_MODE {0}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(32)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
V/GSM     (  167): SIMRecords:fetchSimRecords 0
D/RILJ    (  167): [0026]> GET_IMSI
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 500480us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0026]> GET_IMSI 
D/RIL     (   32): onRequest: GET_IMSI
D/AT      (   32): AT> AT+CIMI
D/AT      (   32): AT< 310260000000000
D/AT      (   32): AT< OK
D/RILC    (   32): [0026]< GET_IMSI {310260000000000}
D/RILJ    (  167): [0026]< GET_IMSI 
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(33)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0027]> iccIO: SIM_IO 0xc0 0x2fe2  path: 3F00,0,0,15
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 538651us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0027]> SIM_IO (cmd=0xC0,efid=0x2FE2,path=3F00,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,12258,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,0000000a2fe204000fa0aa01020000
D/RILJ    (  167): [0028]> iccIO: SIM_IO 0xc0 0x6f40  path: 3F007F10,0,0,15
D/RILJ    (  167): [0029]> iccIO: SIM_IO 0xc0 0x6fc9  path: 3F007F20,0,0,15
D/AT      (   32): AT< OK
D/RILC    (   32): [0027]< SIM_IO {sw1=0x90,sw2=0x0,0000000a2fe204000fa0aa01020000}
D/RILJ    (  167): [0027]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): [0028]> SIM_IO (cmd=0xC0,efid=0x6F40,path=3F007F10,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28480,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000806f40040011a0aa01020120
D/AT      (   32): AT< OK
D/RILC    (   32): [0028]< SIM_IO {sw1=0x90,sw2=0x0,000000806f40040011a0aa01020120}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(34)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0028]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 648939us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0029]> SIM_IO (cmd=0xC0,efid=0x6FC9,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28617,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000086fc9040011a0aa01020104
D/AT      (   32): AT< OK
D/RILJ    (  167): [0030]> iccIO: SIM_IO 0xc0 0x6fad  path: 3F007F20,0,0,15
D/RILC    (   32): [0029]< SIM_IO {sw1=0x90,sw2=0x0,000000086fc9040011a0aa01020104}
D/RILJ    (  167): [0029]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): [0030]> SIM_IO (cmd=0xC0,efid=0x6FAD,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28589,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000046fad04000aa0aa01020000
D/AT      (   32): AT< OK
D/RILC    (   32): [0030]< SIM_IO {sw1=0x90,sw2=0x0,000000046fad04000aa0aa01020000}
D/RILJ    (  167): [0030]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0031]> iccIO: SIM_IO 0xc0 0x6fca  path: 3F007F20,0,0,15
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(35)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 695894us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0031]> SIM_IO (cmd=0xC0,efid=0x6FCA,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28618,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,0000000a6fca040011a0aa01020105
D/AT      (   32): AT< OK
D/RILC    (   32): [0031]< SIM_IO {sw1=0x90,sw2=0x0,0000000a6fca040011a0aa01020105}
D/RILJ    (  167): [0031]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(36)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0032]> iccIO: SIM_IO 0xc0 0x6f11  path: 3F007F20,0,0,15
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 703651us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0032]> SIM_IO (cmd=0xC0,efid=0x6F11,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28433,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000016f11040011a0aa01020000
D/AT      (   32): AT< OK
D/RILJ    (  167): [0033]> iccIO: SIM_IO 0xc0 0x6fcb  path: 3F007F20,0,0,15
D/RILC    (   32): [0032]< SIM_IO {sw1=0x90,sw2=0x0,000000016f11040011a0aa01020000}
D/RILJ    (  167): [0032]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(37)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 732267us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0033]> SIM_IO (cmd=0xC0,efid=0x6FCB,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28619,0,0,15
D/AT      (   32): AT< ERROR: BAD COMMAND
D/RILC    (   32): [0033]< SIM_IO fails by E_GENERIC_FAILURE
D/RILJ    (  167): [0033]< SIM_IO error: com.android.internal.telephony.CommandException: GENERIC_FAILURE
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(38)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0034]> iccIO: SIM_IO 0xc0 0x6f13  path: 3F007F20,0,0,15
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 742902us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILJ    (  167): [0035]> iccIO: SIM_IO 0xc0 0x6f46  path: 3F007F20,0,0,15
D/RILC    (   32): [0034]> SIM_IO (cmd=0xC0,efid=0x6F13,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28435,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000016f13040011a0aa01020000
D/AT      (   32): AT< OK
D/RILC    (   32): [0034]< SIM_IO {sw1=0x90,sw2=0x0,000000016f13040011a0aa01020000}
D/RILJ    (  167): [0034]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(39)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 807306us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILJ    (  167): [0036]> iccIO: SIM_IO 0xc0 0x6fcd  path: 3F007F20,0,0,15
D/RILJ    (  167): [0037]> iccIO: SIM_IO 0xc0 0x6fc5  path: 3F007F20,0,0,15
D/RILC    (   32): [0035]> SIM_IO (cmd=0xC0,efid=0x6F46,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28486,0,0,15
D/AT      (   32): AT< +CRSM: 148,4
D/AT      (   32): AT< OK
D/RILC    (   32): [0035]< SIM_IO {sw1=0x94,sw2=0x4,(null)}
D/RILJ    (  167): [0035]< SIM_IO IccIoResponse sw1:0x94 sw2:0x4
D/RILC    (   32): [0036]> SIM_IO (cmd=0xC0,efid=0x6FCD,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28621,0,0,15
D/AT      (   32): AT< +CRSM: 148,4
D/AT      (   32): AT< OK
D/RILC    (   32): [0036]< SIM_IO {sw1=0x94,sw2=0x4,(null)}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(40)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0036]< SIM_IO IccIoResponse sw1:0x94 sw2:0x4
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 883815us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0037]> SIM_IO (cmd=0xC0,efid=0x6FC5,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28613,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000f06fc504000aa0aa01020118
D/AT      (   32): AT< OK
D/RILC    (   32): [0037]< SIM_IO {sw1=0x90,sw2=0x0,000000f06fc504000aa0aa01020118}
D/RILJ    (  167): [0037]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0038]> iccIO: SIM_IO 0xc0 0x6f38  path: 3F007F20,0,0,15
D/RILC    (   32): [0038]> SIM_IO (cmd=0xC0,efid=0x6F38,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28472,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,0000000f6f3804001aa0aa01020000
D/AT      (   32): AT< OK
D/RILC    (   32): [0038]< SIM_IO {sw1=0x90,sw2=0x0,0000000f6f3804001aa0aa01020000}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(41)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0038]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0039]> iccIO: SIM_IO 0xc0 0x6f16  path: 3F007F20,0,0,15
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 940420us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0039]> SIM_IO (cmd=0xC0,efid=0x6F16,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28438,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000026f1604001aa0aa01020000
D/AT      (   32): AT< OK
D/RILC    (   32): [0039]< SIM_IO {sw1=0x90,sw2=0x0,000000026f1604001aa0aa01020000}
D/RILJ    (  167): [0039]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(42)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0040]> iccIO: SIM_IO 0xc0 0x6f15  path: 3F007F20,0,0,15
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 962351us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0040]> SIM_IO (cmd=0xC0,efid=0x6F15,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28437,0,0,15
D/AT      (   32): AT< ERROR: BAD COMMAND
D/RILC    (   32): [0040]< SIM_IO fails by E_GENERIC_FAILURE
D/RILJ    (  167): [0040]< SIM_IO error: com.android.internal.telephony.CommandException: GENERIC_FAILURE
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(43)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0041]> GET_SIM_STATUS
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 38s + 989001us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0041]> GET_SIM_STATUS 
D/RIL     (   32): onRequest: GET_SIM_STATUS
D/AT      (   32): AT> AT+CPIN?
D/AT      (   32): AT< +CPIN: READY
D/AT      (   32): AT< OK
D/RILC    (   32): [0041]< GET_SIM_STATUS {[app_type=1,app_state=5,perso_substate=2,                    aid_ptr=(null),app_label_ptr=(null),pin1_replaced=0,pin1=0,pin2=0],}
D/RILJ    (  167): [0041]< GET_SIM_STATUS IccCardState {CARDSTATE_PRESENT,PINSTATE_UNKNOWN,num_apps=1,gsm_id=0{APPTYPE_SIM,APPSTATE_READY},cmda_id=8,ism_id=8}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(44)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0042]> QUERY_FACILITY_LOCK
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 39s + 25412us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0042]> QUERY_FACILITY_LOCK (SC,,7,(null))
D/RIL     (   32): onRequest: QUERY_FACILITY_LOCK
D/RILC    (   32): [0042]< QUERY_FACILITY_LOCK fails by E_REQUEST_NOT_SUPPORTED
D/RILJ    (  167): [0043]> QUERY_FACILITY_LOCK
D/RILJ    (  167): [0042]< QUERY_FACILITY_LOCK error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(45)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 39s + 47003us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0043]> QUERY_FACILITY_LOCK (FD,,7,(null))
D/RIL     (   32): onRequest: QUERY_FACILITY_LOCK
D/RILC    (   32): [0043]< QUERY_FACILITY_LOCK fails by E_REQUEST_NOT_SUPPORTED
D/RILJ    (  167): [0043]< QUERY_FACILITY_LOCK error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(46)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0044]> RIL_REQUEST_REPORT_STK_SERVICE_IS_RUNNING
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 39s + 54609us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0044]> REPORT_STK_SERVICE_IS_RUNNING 
D/RIL     (   32): onRequest: REPORT_STK_SERVICE_IS_RUNNING
D/RILC    (   32): [0044]< REPORT_STK_SERVICE_IS_RUNNING fails by E_REQUEST_NOT_SUPPORTED
D/RILJ    (  167): [0044]< RIL_REQUEST_REPORT_STK_SERVICE_IS_RUNNING error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(47)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
E/GSM     (  167): [GsmSST] error parsing RegistrationState: java.lang.NumberFormatException: Invalid int: "ffffffff"
D/GSM     (  167): [GsmSST] Poll ServiceState done:  oldSS=[1 home null null null  Unknown:0 CSS not supported 0 0 RoamInd=0 DefRoamInd=0 EmergOnly=false] newSS=[0 home Android Android 310260  UMTS:3 CSS not supported 0 0 RoamInd=0 DefRoamInd=0 EmergOnly=false] oldGprs=1 newData=0 oldMaxDataCalls=1 mNewMaxDataCalls=1 oldReasonDataDenied=-1 mNewReasonDataDenied=-1 oldType=Unknown:0 newType=UMTS:3
D/GSM     (  167): [GsmSST] RAT switched Unknown:0 -> UMTS:3 at cell -1
D/GSM     (  167): [GsmSST] updateSpnDisplay: changed sending intent rule=2 showPlmn='true' plmn='Android' showSpn='false' spn='null'
D/GSM     (  167): [GsmDCT] get all active apn types
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(default): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=true apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:default
D/GSM     (  167): IMSI: xxxxxxx
D/GSM     (  167): [IccCard] Broadcasting intent ACTION_SIM_STATE_CHANGED IMSI reason null
D/RILJ    (  167): [0045]> iccIO: SIM_IO 0xb0 0x2fe2  path: 3F00,0,0,10
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 200630us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0045]> SIM_IO (cmd=0xB0,efid=0x2FE2,path=3F00,0,0,10,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=176,12258,0,0,10
D/AT      (   32): AT< +CRSM: 144,0,98101430121181157002
D/AT      (   32): AT< OK
D/RILC    (   32): [0045]< SIM_IO {sw1=0x90,sw2=0x0,98101430121181157002}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(48)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0045]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0046]> iccIO: SIM_IO 0xb2 0x6f40  path: 3F007F10,1,4,32
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 222727us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0046]> SIM_IO (cmd=0xB2,efid=0x6F40,path=3F007F10,1,4,32,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=178,28480,1,4,32
D/AT      (   32): AT< +CRSM: 144,0,ffffffffffffffffffffffffffffffffffff07815155255155f4ffffffffffff
D/AT      (   32): AT< OK
D/RILC    (   32): [0046]< SIM_IO {sw1=0x90,sw2=0x0,ffffffffffffffffffffffffffffffffffff07815155255155f4ffffffffffff}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(49)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0046]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0047]> iccIO: SIM_IO 0xb2 0x6fc9  path: 3F007F20,1,4,4
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 246651us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0047]> SIM_IO (cmd=0xB2,efid=0x6FC9,path=3F007F20,1,4,4,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=178,28617,1,4,4
D/AT      (   32): AT< +CRSM: 144,0,01000000
D/AT      (   32): AT< OK
D/RILC    (   32): [0047]< SIM_IO {sw1=0x90,sw2=0x0,01000000}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(50)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0047]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0048]> iccIO: SIM_IO 0xb0 0x6fad  path: 3F007F20,0,0,4
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 301280us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0048]> SIM_IO (cmd=0xB0,efid=0x6FAD,path=3F007F20,0,0,4,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=176,28589,0,0,4
D/AT      (   32): AT< +CRSM: 144,0,00000003
D/AT      (   32): AT< OK
D/RILC    (   32): [0048]< SIM_IO {sw1=0x90,sw2=0x0,00000003}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(51)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0048]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0049]> iccIO: SIM_IO 0xb2 0x6fca  path: 3F007F20,1,4,5
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 363937us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0049]> SIM_IO (cmd=0xB2,efid=0x6FCA,path=3F007F20,1,4,5,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=178,28618,1,4,5
D/AT      (   32): AT< +CRSM: 144,0,0000000000
D/AT      (   32): AT< OK
D/RILC    (   32): [0049]< SIM_IO {sw1=0x90,sw2=0x0,0000000000}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(52)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILJ    (  167): [0049]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0050]> iccIO: SIM_IO 0xb0 0x6f11  path: 3F007F20,0,0,1
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 457657us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0050]> SIM_IO (cmd=0xB0,efid=0x6F11,path=3F007F20,0,0,1,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=176,28433,0,0,1
D/AT      (   32): AT< +CRSM: 144,0,55
D/AT      (   32): AT< OK
D/RILC    (   32): [0050]< SIM_IO {sw1=0x90,sw2=0x0,55}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(53)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0050]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0051]> iccIO: SIM_IO 0xb0 0x6f13  path: 3F007F20,0,0,1
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 468828us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0051]> SIM_IO (cmd=0xB0,efid=0x6F13,path=3F007F20,0,0,1,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=176,28435,0,0,1
D/AT      (   32): AT< +CRSM: 144,0,55
D/AT      (   32): AT< OK
D/RILC    (   32): [0051]< SIM_IO {sw1=0x90,sw2=0x0,55}
D/RILJ    (  167): [0051]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(54)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0052]> iccIO: SIM_IO 0xb2 0x6fc5  path: 3F007F20,1,4,24
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 544235us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0052]> SIM_IO (cmd=0xB2,efid=0x6FC5,path=3F007F20,1,4,24,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=178,28613,1,4,24
D/AT      (   32): AT< +CRSM: 144,0,43058441aa890affffffffffffffffffffffffffffffffff
D/AT      (   32): AT< OK
D/RILC    (   32): [0052]< SIM_IO {sw1=0x90,sw2=0x0,43058441aa890affffffffffffffffffffffffffffffffff}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(55)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0052]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0053]> iccIO: SIM_IO 0xb0 0x6f38  path: 3F007F20,0,0,15
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 583456us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0053]> SIM_IO (cmd=0xB0,efid=0x6F38,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=176,28472,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,ff30ffff3c003c03000c0000f03f00
D/AT      (   32): AT< OK
D/RILC    (   32): [0053]< SIM_IO {sw1=0x90,sw2=0x0,ff30ffff3c003c03000c0000f03f00}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(56)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0053]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILJ    (  167): [0054]> iccIO: SIM_IO 0xb0 0x6f16  path: 3F007F20,0,0,2
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 40s + 598074us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0054]> SIM_IO (cmd=0xB0,efid=0x6F16,path=3F007F20,0,0,2,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=176,28438,0,0,2
D/AT      (   32): AT< +CRSM: 144,0,0233
D/AT      (   32): AT< OK
D/RILC    (   32): [0054]< SIM_IO {sw1=0x90,sw2=0x0,0233}
D/RILJ    (  167): [0054]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(57)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
E/GSM     (  167): [IccCard] Invalid Subscription Application index:8
D/GSM     (  167): [IccCard] USIM=READY CSIM=ABSENT
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/GSM     (  167): [IccCard] Error in querying facility lock:com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/GSM     (  167): [IccCard] Error in querying facility lock:com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270352 when=-1s6ms obj=android.os.AsyncResult@4106dca0 }
D/GSM     (  167): [GsmDCT] onDataConnectionAttached
D/GSM     (  167): [GsmDCT] overall state is IDLE
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:fota
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:supl
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:hipri
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:ims
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=IDLE apnType=default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:mms
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:cbs
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/GSM     (  167): [ApnContext] set reason as dataAttached, for type default,current state IDLE
D/GSM     (  167): [GsmDCT] trySetupData for type:default due to dataAttached
D/GSM     (  167): [GsmDCT] trySetupData with mIsPsRestricted=false
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:fota
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:supl
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:hipri
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:ims
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=IDLE apnType=default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:mms
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:cbs
D/GSM     (  167): [GsmDCT] isDataAllowed: not allowed due to - SIM not loaded
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=false isDataAllowed=false apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/RILJ    (  167): [0055]> iccIO: SIM_IO 0xc0 0x6f14  path: 3F007F20,0,0,15
E/GSM     (  167): Exception in fetching EF_CSP data com.android.internal.telephony.CommandException: GENERIC_FAILURE
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 43s + 745673us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0055]> SIM_IO (cmd=0xC0,efid=0x6F14,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28436,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000146f1404001aa0aa01020000
D/AT      (   32): AT< OK
D/RILC    (   32): [0055]< SIM_IO {sw1=0x90,sw2=0x0,000000146f1404001aa0aa01020000}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(58)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0055]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/GSM     (  167): iccid: 89014103211118510720
D/GSM     (  167): EF_MBI: 01000000
D/GSM     (  167): Got valid mailbox number for MBDN
D/RILJ    (  167): [0056]> iccIO: SIM_IO 0xc0 0x6fc7  path: 3F007F20,0,0,15
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 44s + 222142us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0056]> SIM_IO (cmd=0xC0,efid=0x6FC7,path=3F007F20,0,0,15,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=192,28615,0,0,15
D/AT      (   32): AT< +CRSM: 144,0,000000406fc7040011a0aa01020120
D/AT      (   32): AT< OK
D/RILC    (   32): [0056]< SIM_IO {sw1=0x90,sw2=0x0,000000406fc7040011a0aa01020120}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(59)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0056]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/GSM     (  167): EF_AD: 00000003
D/GSM     (  167): EF_MWIS: 0000000000
D/GSM     (  167): EF_CFF_CPHS: 55
D/GSM     (  167): [SIMRecords] iCPHS: 0233
D/RILJ    (  167): [0057]> iccIO: SIM_IO 0xb0 0x6f14  path: 3F007F20,0,0,20
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 44s + 504212us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0057]> SIM_IO (cmd=0xB0,efid=0x6F14,path=3F007F20,0,0,20,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=176,28436,0,0,20
D/AT      (   32): AT< +CRSM: 144,0,416e64726f6964ffffffffffffffffffffffffff
D/AT      (   32): AT< OK
D/RILC    (   32): [0057]< SIM_IO {sw1=0x90,sw2=0x0,416e64726f6964ffffffffffffffffffffffffff}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(60)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0057]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/GSM     (  167): MSISDN: xxxxxxx
D/RILJ    (  167): [0058]> iccIO: SIM_IO 0xb2 0x6fc7  path: 3F007F20,1,4,32
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 44s + 726985us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0058]> SIM_IO (cmd=0xB2,efid=0x6FC7,path=3F007F20,1,4,32,(null),pin2=(null),aid=(null))
D/RIL     (   32): onRequest: SIM_IO
D/AT      (   32): AT> AT+CRSM=178,28615,1,4,32
D/AT      (   32): AT< +CRSM: 144,0,566f6963656d61696cffffffffffffffffff07915155125740f9ffffffffffff
D/AT      (   32): AT< OK
D/RILC    (   32): [0058]< SIM_IO {sw1=0x90,sw2=0x0,566f6963656d61696cffffffffffffffffff07915155125740f9ffffffffffff}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(61)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0058]< SIM_IO IccIoResponse sw1:0x90 sw2:0x0
D/GSM     (  167): [SIMRecords] Load EF_SPN_CPHS: Android
D/GSM     (  167): VM: ADN Record 'Voicemail' '+15552175049 null' EF[MBDN]
D/GSM     (  167): SIMRecords: record load complete
D/GSM     (  167): [IccCard] Broadcasting intent ACTION_SIM_STATE_CHANGED LOADED reason null
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270338 when=-62ms obj=android.os.AsyncResult@410ea5e0 }
D/GSM     (  167): [GsmDCT] onRecordsLoaded: createAllApnList
D/GSM     (  167): [GsmDCT] createAllApnList: selection=numeric = '310260' and carrier_enabled = 1
D/GSM     (  167): [GsmDCT] createApnList: X result=[[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0]
D/GSM     (  167): [GsmDCT] createAllApnList: mPreferredApn=[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0
D/GSM     (  167): [GsmDCT] createAllApnList: X mAllApns=[[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0]
D/GSM     (  167): [GsmDCT] onRecordsLoaded: notifying data availability
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:fota
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:supl
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:hipri
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:ims
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=IDLE apnType=default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:mms
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:cbs
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/GSM     (  167): [ApnContext] set reason as simLoaded, for type default,current state IDLE
D/GSM     (  167): [GsmDCT] trySetupData for type:default due to simLoaded
D/GSM     (  167): [GsmDCT] trySetupData with mIsPsRestricted=false
D/GSM     (  167): [GsmDCT] isEmergency: result=false
D/GSM     (  167): [GsmDCT] buildWaitingApns: Preferred APN:310260:310260:[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0
D/GSM     (  167): [GsmDCT] buildWaitingApns: X added preferred apnList=[[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0]
D/GSM     (  167): [GsmDCT] trySetupData: Create from mAllApns : [[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0]
D/GSM     (  167): [GsmDCT] Setup watingApns : [[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0]
D/GSM     (  167): [GsmDCT] setupData: apnContext=state=IDLE apnType=default
D/GSM     (  167): [GsmDCT] checkForConnectionForApnContext: apnContext=state=IDLE apnType=default NO conn
D/GSM     (  167): [GsmDCT] findReadyDataConnection: apn string <[ApnSettingV2] T-Mobile US, 1, 310260, epc.tmobile.com, null, http://mms.msg.eng.t-mobile.com/mms/wapenc, null, null, null, -1, *, IP, IP, true, 0>
D/GSM     (  167): [GsmDCT] setupData: No ready GsmDataConnection found!
D/GSM     (  167): [GsmDCT] findFreeDataConnection: NO free GsmDataConnection
D/GSM     (  167): [GsmDCT] createDataConnection E
D/GSM     (  167): [GsmDC-1] DataConnection constructor E
D/GSM     (  167): [GsmDC-1] DataConnection constructor X
D/RILB    (  167): registerForRilConnected h=Handler (com.android.internal.util.StateMachine$SmHandler) {41085900} w=262149
D/RILB    (  167): Notifying: ril connected mRilVersion=6
D/GSM     (  167): [GsmDC-1] clearSettings
D/GSM     (  167): [GsmDC-1] Made GsmDC-1
D/GSM     (  167): [GsmDC-1] DcDefaultState: msg.what=EVENT_RIL_CONNECTED mRilVersion=6
D/GSM     (  167): [GsmDCT] createDataConnection() X id=0
D/GSM     (  167): [GsmDCT] setupData: init dc and apnContext refCount=0
D/GSM     (  167): [ApnContext] setState: INITING for type default, previous state:IDLE
D/GSM     (  167): [GsmDCT] isDataPossible(default): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=true apnContextState()=INITING
D/GSM     (  167): [GsmDCT] get active apn string for type:default
D/GSM     (  167): [GsmDC-1] DcInactiveState msg.what=EVENT_CONNECT.RefCount = 0
D/GSM     (  167): [GsmDC-1] Connecting to carrier: 'T-Mobile US' APN: 'epc.tmobile.com' proxy: 'null' port: 'null
D/RILJ    (  167): [0059]> SETUP_DATA_CALL 5 0 epc.tmobile.com none none 3 IP
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 46s + 449537us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0059]> SETUP_DATA_CALL (5,0,epc.tmobile.com,none,none,3,IP)
D/RIL     (   32): onRequest: SETUP_DATA_CALL
D/RIL     (   32): requesting data connection to APN 'epc.tmobile.com'
D/AT      (   32): AT> AT+CGDCONT=1,"IP","epc.tmobile.com",,0,0
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGQREQ=1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGQMIN=1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGEREP=1,0
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGACT=1,0
D/AT      (   32): AT< OK
D/AT      (   32): AT> ATD*99***1#
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGACT?
D/AT      (   32): AT< +CGACT: 1,1
D/AT      (   32): AT< OK
D/AT      (   32): AT> AT+CGDCONT?
D/AT      (   32): AT< +CGDCONT: 1,"IP","epc.tmobile.com","10.0.2.15",0,0
D/AT      (   32): AT< OK
D/RILC    (   32): [0059]< SETUP_DATA_CALL {[status=0,retry=-1,cid=1,up,269482760,10.0.2.15,10.0.2.3 10.0.2.4 10.0.2.5,10.0.2.2]}
D/RILJ    (  167): [0059]< SETUP_DATA_CALL DataCallState: {version=6 status=0 retry=-1 cid=1 active=1 type=IP' ifname='eth0' addresses=[10.0.2.15] dnses=[10.0.2.3,10.0.2.4,10.0.2.5] gateways=[10.0.2.2]}
D/GSM     (  167): [GsmDC-1] DcActivatingState msg.what=EVENT_SETUP_DATA_CONNECTION_DONE
D/GSM     (  167): [GsmDC-1] onSetupConnectionCompleted received DataCallState: DataCallState: {version=6 status=0 retry=-1 cid=1 active=1 type=IP' ifname='eth0' addresses=[10.0.2.15] dnses=[10.0.2.3,10.0.2.4,10.0.2.5] gateways=[10.0.2.2]}
D/GSM     (  167): addr/pl=10.0.2.15/32
D/GSM     (  167): [GsmDC-1] updateLinkProperty old != new
D/GSM     (  167): [GsmDC-1] DcActivatingState onSetupConnectionCompleted result=SUCCESS  SetupResult.mFailCause=NONE
D/GSM     (  167): [GsmDC-1] notifyConnectionCompleted at 1383008847057 cause=NONE
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(62)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/GSM     (  167): [GsmDCT] setupData: initing!
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:fota
D/GSM     (  167): [GsmDCT] isDataPossible(fota): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:fota
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:supl
D/GSM     (  167): [GsmDCT] isDataPossible(supl): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:supl
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:hipri
D/GSM     (  167): [GsmDCT] isDataPossible(hipri): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:hipri
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:ims
D/GSM     (  167): [GsmDCT] isDataPossible(ims): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:ims
D/GSM     (  167): [GsmDCT] notifyOffApnsOfAvailability skipped apn due to isReady==false: state=INITING apnType=default
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:mms
D/GSM     (  167): [GsmDCT] isDataPossible(mms): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:mms
D/GSM     (  167): [GsmDCT] notifyOffApnOfAvailability type:cbs
D/GSM     (  167): [GsmDCT] isDataPossible(cbs): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=false apnContextState()=IDLE
D/GSM     (  167): [GsmDCT] get active apn string for type:cbs
D/GSM     (  167): [GsmSST] updateSpnDisplay: changed sending intent rule=2 showPlmn='true' plmn='Android' showSpn='false' spn='Android'
D/PHONE   (  167): VM: PhoneSubInfo.getVoiceMailNUmber: 
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270336 when=-1s64ms arg1=1 obj=android.os.AsyncResult@410abc20 }
D/GSM     (  167): [GsmDCT] isDataSetupCompleteOk return true
D/GSM     (  167): [GsmDCT] onDataSetupComplete: success apn=epc.tmobile.com
D/GSM     (  167): [GsmDCT] notifyDefaultData: type=default, reason:simLoaded
D/GSM     (  167): [ApnContext] setState: CONNECTED for type default, previous state:INITING
D/GSM     (  167): [GsmDCT] return link properites for default
D/GSM     (  167): [GsmDCT] get active pdp is not null, return link Capabilities for default
D/GSM     (  167): [GsmDCT] isDataPossible(default): possible=true isDataAllowed=true apnTypePossible=true apnContextisEnabled=true apnContextState()=CONNECTED
D/GSM     (  167): [GsmDCT] get active apn string for type:default
D/GSM     (  167): [GsmDCT] overall state is CONNECTED
D/GSM     (  167): [GsmDCT] startNetStatPoll
D/PHONE   (  167): VM: PhoneSubInfo.getVoiceMailNUmber: 
D/RILJ    (  167): [0060]> SIGNAL_STRENGTH
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 58s + 461601us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0060]> SIGNAL_STRENGTH 
D/RIL     (   32): onRequest: SIGNAL_STRENGTH
D/AT      (   32): AT> AT+CSQ
D/AT      (   32): AT< +CSQ: 7,99
D/AT      (   32): AT< OK
E/RILC    (   32): invalid response length
D/RILC    (   32): [0060]< SIGNAL_STRENGTH
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(63)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0060]< SIGNAL_STRENGTH error: com.android.internal.telephony.CommandException: INVALID_RESPONSE
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/GSM     (  167): isTwoDigitShortCode
D/GSM     (  167): dialing w/ mmi 'null'...
D/GSM     (  167): [GSMConn] acquireWakeLock
D/RILJ    (  167): [0061]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 70s + 79816us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0061]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0061]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(64)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0061]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILJ    (  167): [0062]> DIAL
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 70s + 98456us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0062]> DIAL (num=10086,clir=0)
D/RIL     (   32): onRequest: DIAL
D/AT      (   32): AT> ATD10086;
D/AT      (   32): AT< OK
D/RILC    (   32): [0062]< DIAL
D/RILJ    (  167): [0062]< DIAL 
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(65)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0063]> GET_CURRENT_CALLS
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 70s + 222306us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0063]> GET_CURRENT_CALLS 
D/RIL     (   32): onRequest: GET_CURRENT_CALLS
D/AT      (   32): AT> AT+CLCC
D/AT      (   32): AT< +CLCC: 1,0,2,0,0,"10086",129
D/AT      (   32): AT< OK
D/RILC    (   32): [0063]< GET_CURRENT_CALLS {[id=1,DIALING,toa=129,norm,mo,als=0,voc,noevp,10086,cli=0,name='(null)',0}
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b4e8 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 70s + 724603us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(66)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 70s + 225345us ~~~~
D/RILC    (   32): ~~~~ next = 70s + 724603us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 499258us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
V/RILJ    (  167): Incoming UUS : NOT present!
D/RILJ    (  167): InCall VoicePrivacy is disabled
D/RILJ    (  167): [0063]< GET_CURRENT_CALLS  [id=1,DIALING,toa=129,norm,mo,0,voc,noevp,,cli=1,,0] 
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270343 when=-131ms obj=android.os.AsyncResult@411532d8 }
D/GSM     (  167): [GsmDCT] onVoiceCallStarted
D/RILJ    (  167): [0064]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 70s + 395315us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0064]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0064]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(67)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 70s + 397194us ~~~~
D/RILC    (   32): ~~~~ next = 70s + 724603us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 327409us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0064]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/GSM     (  167): [GSMConn] update: parent=DIALING, hasNewParent=false, wasConnectingInOrOut=true, wasHolding=false, isConnectingInOrOut=true, changed=false
D/RILJ    (  167): [0065]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 70s + 547375us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0065]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0065]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(68)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 70s + 548971us ~~~~
D/RILC    (   32): ~~~~ next = 70s + 724603us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 175632us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0065]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 70s + 726452us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 70s + 724603us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 70s + 724603us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 70s + 724603us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [UNSL]< UNSOL_RESPONSE_CALL_STATE_CHANGED 
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b520 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 71s + 728242us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(69)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 70s + 728847us ~~~~
D/RILC    (   32): ~~~~ next = 71s + 728242us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 999395us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [UNSL]< UNSOL_RESPONSE_CALL_STATE_CHANGED
D/AT      (   32): AT< RING
D/RILC    (   32): [UNSL]< UNSOL_RESPONSE_CALL_STATE_CHANGED 
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b4e8 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = b520
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 72s + 99662us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 71s + 100446us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (0)
D/RILC    (   32): rev is (9), fd is set (0)
D/RILC    (   32): rev is (6), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d900 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 6
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400996fd
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(6)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d900 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 6
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400996fd
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(70)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 71s + 101695us ~~~~
D/RILC    (   32): ~~~~ next = 71s + 728242us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 626547us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [UNSL]< UNSOL_RESPONSE_CALL_STATE_CHANGED
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 71s + 729693us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = b4e8
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 71s + 728242us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 71s + 728242us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 71s + 728242us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(71)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 71s + 731319us ~~~~
D/RILC    (   32): ~~~~ next = 72s + 99662us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 368343us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/AT      (   32): AT< RING
D/RILC    (   32): [UNSL]< UNSOL_RESPONSE_CALL_STATE_CHANGED 
D/RILC    (   32): timed callback add timer && wake to initialize at modem
D/RILC    (   32): ~~~~ ril_event_set b520 ~~~~
D/RILC    (   32): ~~~~ +ril_timer_add ~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = b4e8
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 73s + 99605us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -ril_timer_add ~~~~
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 72s + 100364us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = b520
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 72s + 99662us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 72s + 99662us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (0)
D/RILC    (   32): rev is (9), fd is set (0)
D/RILC    (   32): rev is (6), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d900 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = b4e8
D/RILC    (   32):      fd      = 6
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400996fd
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b4e8 ~~~~
D/RILC    (   32):      next    = 4009d900
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 72s + 99662us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b4e0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): fire event(6)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d900 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 6
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 400996fd
D/RILC    (   32):      param   = 0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(72)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 72s + 102713us ~~~~
D/RILC    (   32): ~~~~ next = 73s + 99605us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 996892us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [UNSL]< UNSOL_RESPONSE_CALL_STATE_CHANGED
D/PHONE   (  167): VM: PhoneSubInfo.getVoiceMailNUmber: 
D/RILJ    (  167): [0066]> GET_CURRENT_CALLS
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 72s + 408080us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0066]> GET_CURRENT_CALLS 
D/RIL     (   32): onRequest: GET_CURRENT_CALLS
D/AT      (   32): AT> AT+CLCC
D/AT      (   32): AT< +CLCC: 1,0,0,0,0,"10086",129
D/AT      (   32): AT< OK
D/RILC    (   32): [0066]< GET_CURRENT_CALLS {[id=1,ACTIVE,toa=129,norm,mo,als=0,voc,noevp,10086,cli=0,name='(null)',0}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(73)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 72s + 410672us ~~~~
D/RILC    (   32): ~~~~ next = 73s + 99605us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 688933us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
V/RILJ    (  167): Incoming UUS : NOT present!
D/RILJ    (  167): InCall VoicePrivacy is disabled
D/RILJ    (  167): [0066]< GET_CURRENT_CALLS  [id=1,ACTIVE,toa=129,norm,mo,0,voc,noevp,,cli=1,,0] 
D/RILJ    (  167): [0067]> GET_CURRENT_CALLS
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 72s + 455589us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0067]> GET_CURRENT_CALLS 
D/RIL     (   32): onRequest: GET_CURRENT_CALLS
D/AT      (   32): AT> AT+CLCC
D/AT      (   32): AT< +CLCC: 1,0,0,0,0,"10086",129
D/AT      (   32): AT< OK
D/RILC    (   32): [0067]< GET_CURRENT_CALLS {[id=1,ACTIVE,toa=129,norm,mo,als=0,voc,noevp,10086,cli=0,name='(null)',0}
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(74)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 72s + 457719us ~~~~
D/RILC    (   32): ~~~~ next = 73s + 99605us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 641886us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
V/RILJ    (  167): Incoming UUS : NOT present!
D/RILJ    (  167): InCall VoicePrivacy is disabled
D/RILJ    (  167): [0067]< GET_CURRENT_CALLS  [id=1,ACTIVE,toa=129,norm,mo,0,voc,noevp,,cli=1,,0] 
D/RILJ    (  167): [0068]> GET_CURRENT_CALLS
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 72s + 476749us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0068]> GET_CURRENT_CALLS 
D/RIL     (   32): onRequest: GET_CURRENT_CALLS
D/AT      (   32): AT> AT+CLCC
D/AT      (   32): AT< +CLCC: 1,0,0,0,0,"10086",129
D/AT      (   32): AT< OK
D/RILC    (   32): [0068]< GET_CURRENT_CALLS {[id=1,ACTIVE,toa=129,norm,mo,als=0,voc,noevp,10086,cli=0,name='(null)',0}
V/RILJ    (  167): Incoming UUS : NOT present!
D/RILJ    (  167): InCall VoicePrivacy is disabled
D/RILJ    (  167): [0068]< GET_CURRENT_CALLS  [id=1,ACTIVE,toa=129,norm,mo,0,voc,noevp,,cli=1,,0] 
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(75)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 72s + 482214us ~~~~
D/RILC    (   32): ~~~~ next = 73s + 99605us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 617391us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0069]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 72s + 973276us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0069]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0069]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(76)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 72s + 974838us ~~~~
D/RILC    (   32): ~~~~ next = 73s + 99605us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 124767us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0069]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/GSM     (  167): [GSMConn] update: parent=ACTIVE, hasNewParent=false, wasConnectingInOrOut=true, wasHolding=false, isConnectingInOrOut=false, changed=true
D/GSM     (  167): [GSMConn] onConnectedInOrOut: connectTime=1383008873577
D/GSM     (  167): [GSMConn] releaseWakeLock
D/RILJ    (  167): [0070]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 73s + 17980us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0070]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0070]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(77)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ now = 73s + 19677us ~~~~
D/RILC    (   32): ~~~~ next = 73s + 99605us ~~~~
D/RILC    (   32): ~~~~ blocking for 0s + 79928us ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0070]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/RILC    (   32): ~~~~ 0 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 73s + 100350us ~~~~
D/RILC    (   32): ~~~~ firing timer ~~~~
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = 4009fa24
D/RILC    (   32):      prev    = 4009fa24
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 73s + 99605us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 73s + 99605us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(-1)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event b520 ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = -1
D/RILC    (   32):      pers    = 0
D/RILC    (   32):      timeout = 73s + 99605us
D/RILC    (   32):      func    = 40095c45
D/RILC    (   32):      param   = b518
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(78)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0071]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 73s + 500395us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0071]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0071]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(79)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0071]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/GSM     (  167): [GsmCallTracker] hangupForegroundResumeBackground
D/RILJ    (  167): [0072]> HANGUP_FOREGROUND_RESUME_BACKGROUND
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 77s + 948995us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0072]> HANGUP_FOREGROUND_RESUME_BACKGROUND 
D/RIL     (   32): onRequest: HANGUP_FOREGROUND_RESUME_BACKGROUND
D/AT      (   32): AT> AT+CHLD=1
D/AT      (   32): AT< OK
D/RILC    (   32): [0072]< HANGUP_FOREGROUND_RESUME_BACKGROUND
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(80)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0072]< HANGUP_FOREGROUND_RESUME_BACKGROUND 
D/RILJ    (  167): [0073]> GET_CURRENT_CALLS
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 78s + 64866us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0073]> GET_CURRENT_CALLS 
D/RIL     (   32): onRequest: GET_CURRENT_CALLS
D/AT      (   32): AT> AT+CLCC
D/AT      (   32): AT< OK
D/RILC    (   32): [0073]< GET_CURRENT_CALLS }
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(81)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0073]< GET_CURRENT_CALLS  
D/RILJ    (  167): [0074]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 78s + 155625us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0074]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0074]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(82)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0074]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/GSM     (  167): [GsmDCT] handleMessage msg={ what=270344 when=-149ms obj=android.os.AsyncResult@4126a740 }
D/GSM     (  167): [GsmDCT] onVoiceCallEnded
D/RILJ    (  167): [0075]> SIGNAL_STRENGTH
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 78s + 626738us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0075]> SIGNAL_STRENGTH 
D/RIL     (   32): onRequest: SIGNAL_STRENGTH
D/AT      (   32): AT> AT+CSQ
D/AT      (   32): AT< +CSQ: 7,99
D/AT      (   32): AT< OK
E/RILC    (   32): invalid response length
D/RILC    (   32): [0075]< SIGNAL_STRENGTH
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(83)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0075]< SIGNAL_STRENGTH error: com.android.internal.telephony.CommandException: INVALID_RESPONSE
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILB    (  167): getLteOnCdmaMode=0 curVal=-1 product_type='' lteOnCdmaProductType=''
D/RILJ    (  167): [0076]> SET_MUTE false
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): ~~~~ 1 events fired ~~~~
D/RILC    (   32): ~~~~ +processTimeouts ~~~~
D/RILC    (   32): ~~~~ Looking for timers <= 79s + 327221us ~~~~
D/RILC    (   32): ~~~~ -processTimeouts ~~~~
D/RILC    (   32): ~~~~ +processReadReadies (1) ~~~~
D/RILC    (   32): rev is (17), fd is set (1)
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): ~~~~ -processReadReadies (0) ~~~~
D/RILC    (   32): ~~~~ +firePending ~~~~
D/RILC    (   32): fire event(17)
D/RILC    (   32): ~~~~ Removing event ~~~~
D/RILC    (   32): ~~~~ Event 4009d98c ~~~~
D/RILC    (   32):      next    = 4009fa48
D/RILC    (   32):      prev    = 4009fa48
D/RILC    (   32):      fd      = 17
D/RILC    (   32):      pers    = 1
D/RILC    (   32):      timeout = 0s + 0us
D/RILC    (   32):      func    = 40099191
D/RILC    (   32):      param   = b4b0
D/RILC    (   32): ~~~~~~~~~~~~~~~~~~
D/RILC    (   32): [0076]> SET_MUTE (0)
D/RIL     (   32): onRequest: SET_MUTE
D/RILC    (   32): [0076]< SET_MUTE fails by E_REQUEST_NOT_SUPPORTED
D/RILC    (   32): processCommandBuffer end
D/RILC    (   32): ~~~~ -firePending ~~~~
D/RILC    (   32): ril_event_loop loop_id(84)
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILC    (   32): ~~~~ no timers; blocking indefinitely ~~~~
D/RILC    (   32): ril_event_loop waiting for rfds
D/RILC    (   32): DON: fd=17 is ready
D/RILC    (   32): DON: fd=9 is ready
D/RILC    (   32): DON: fd=6 is ready
D/RILJ    (  167): [0076]< SET_MUTE error: com.android.internal.telephony.CommandException: REQUEST_NOT_SUPPORTED
D/PHONE   (  167): VM: PhoneSubInfo.getVoiceMailNUmber: 
}}}
