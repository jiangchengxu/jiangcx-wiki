= {{../../public/images/Wiki-wordmark.png}} = 
 = Vim =

 == 滚动屏幕 ==
 *前提：Normal模式*
 - `CTRL-F`  //向下滚动一屏
 - `CTRL-B`  //向上滚动一屏
 - `CTRL-D`  //向下滚动半屏
 - `CTRL-U`  //向上滚动半屏
 - `CTRL-E`  //向下滚动一行
 - `CTRL-Y`  //向上滚动一行

 == 移动字符 ==
 - `N <space>`   //从当前位置移动N个字符

 == 复制黏贴 ==
 *前提：Normal模式*
 * 使用系统粘贴板`必须安装gvim才能使用`

 - `+yy`    //复制到系统粘贴板
 - `"+p`     //从系统粘贴板粘贴
 - `"*yy`    //复制到选择缓冲区
 - `"*p`     //从选择缓冲区粘贴
 - `ctrl-r`  //在插入模式下粘帖

* 复制到特定行：
- `ynG`: //从当前行复制到第n行,y表示开始复制，nG表示跳到第n行

* 命令模式下复制
- `:y+`         //复制当前行
- `:Ny+`        //复制第N行
-  
<red>[tips]在插入模式下迅速插入某行数据</red>
# 插入模式下，CTRL-O 退出插入模式
# 使用:Ny+<ENTER> 复制第N行到寄存器＋
# 使用CTRL-R+ 将寄存器＋的内容复制到当前位置

== 在行首插入文本 ==
- `I`       //在行开头插入文本（不包括空白字符）
- `gI`      //在行开头插入文本（包括空白字符）

== Normal模式下自动增加减少数值 ==
- `CTRL-X`  //光标所在位置的数值-1
- `CTRL-A`  //光标所在位置的数值+1
*默认只支持10进制和16进制数字，可使用:set nrformats=octal,hex打开对8进制的支持*

== 查找 ==
- `*`,`#`   //向前/向后查找光标下的单词（全匹配查找）
- `g*`, `g#`    //向前/向后查找光标下所在的单词

== 跳转 ==
- `[{`      //跳回当前代码块起始的{
- `gd`      //从变量的调用跳转到它的局部声明
- `gD`      //从变量的调用跳转到它的全局声明
- `[m`      //向后查找方法的开始 
- `[M`      //向后查找方法的结束
- `]m`      //向前查找方法的开始
- `]M`      //向前查找方法的结束 
- `[I`      //列出所有出现光标下的单词的位置

== 快速选择文本 ==
- `viw`         //快速选中光标所在位置的整个单词
- `yiw`         //快速复制光标所在位置的整个单词

== 查找字符 ==
- `fx`,`Fx`            //前向/后向在`本行`查找字符`x`，光标停止在找到的字符位置`上`
- `tx`,`Tx`            //k前向/后向在`本行`查找字符`x`，光标停止在找到的字符位置`前`
- `;`,`,`              //前向/反向重复查找动作

== 标记 ==
* 标记名小写时为局部标记，大写时为全局标记
* `跳转到标记位置，'跳转到标记所在位置行首

=== 设置标记 ===
- `ma`                    //创建标记a

=== 跳转标记 ===
- `\`a`                   //跳转到标记a的位置
- `'a`                    //跳转到标记a所在的行首

=== 删除标记 ===
- `d'a`                   //删除标记a
- 
-

=== 特殊标记 ===
- `'`                   //跳转前的位置
- `"`                   //最后编辑的位置
- `[`                   //最后修改或粘贴的文本的第一个字符
- `]`                   //最后修改或粘贴的文本的最后一个字符
- `<`                   //上次选择文本的开始位置
- `>`                   //上次可视模式选择文本的结束位置
- `^`                   //最后一次插入模式结束时光标所在位置
- `.`                   //最后一次改变时光标所在位置

== 打印字符数值 ==
- `:ascii`, `ga`               //打印光标位置的字符ascii值，中文字符打印unicode值

== 排序 ==
- `!sort`                      //排序

== tab页 ==
`gf, CTRL+W gf`
当编辑的文件中包含另一个文件的名称时，将光标移动到这个名称上，然后输入gf,会在当前页面打开该文件，如果想再新的tab页中编辑这个文件，使用CTRL+W gf

== 正则表达式 ==
- `*`                   //匹配前一个字符0次或多次
- `\+`                  //匹配前一个字符1次或多次
- `\=`                  //批评前一个字符0次或1次
- `\a`                  //匹配任意字母
- `\d`                  //匹配任意数字
- `[]`                  //匹配[]中的一个字符
- `[^]`                 //匹配非[]中的所有字符
- `\{min,max}`          //匹配前一个字符min次到max次

== 插入状态下操作 ==
- `CTRL-W`              //插入模式下，删除光标前一个单词
- `CTRL-A`              //插入最近插入的文本,保持插入模式
- `CTRL-@`              //插入最近插入的文本并停止插入
- `CTRL-Y`              //插入光标上方的字符
- `CTRL-E`              //插入光标下方的字符
- `CTRL-R {0-9a-z"%#*:="}`            //在光标处插入寄存器的内容
- `CTRL-O cmd`          //普通模式下执行cmd命令后，重新进入插入模式
- `0 CTRL-D`            //删除当前行的所有缩进
- `^ CTRL-D`            //删除当前行的所有缩进,在下一行恢复删除的缩进

* CTRL-X 子模式
- `CTRL-X CTRL-]`        //补全标签
- `CTRL-X CTRL-D`        //补全定义过的标识符
- `CTRL-X CTRL-F`        //补全文件名
- `CTRL-X CTRL-I`        //补全标识符
- `CTRL-X CTRL-K`        //从字典补全标识符
- `CTRL-X CTRL-T`        //从同义词词典补全标识 
- `CTRL-X CTRL-L`        //补全完整的行
- `CTRL-X CTRL-N`        //下一个补全
- `CTRL-X CTRL-O`        //全能 (omni) 补全
- `CTRL-X CTRL-P`        //上一个补全
- `CTRL-X CTRL-S`        //拼写建议
- `CTRL-X s`             //拼写建议
- `CTRL-X CTRL-U`        //用 'completefunc' 补 
- `CTRL-X CTRL-V`        //如同 : 命令行那样补全
- 
== 窗口操作 ==
- `CTRL-W W`             //跳转到前面第N个窗口
- `CTRL-W w`             //跳转到后面第N个窗口
- `CTRL-W t`             //跳转到顶部的窗口(top)
- `CTRL-W b`             //跳转到底部的窗口(bottom)
- `CTRL-W p`             //跳转到前一个窗口
- `CTRL-W x`             //交换当前窗口和第N个窗口(缺省下一个窗口)
- `CTRL-W o`             //只保留光标所在窗口，关闭其他窗口
- `CTRL-W i`             //分割窗口并跳转到光标所在的标识符的声明上
- `CTRL-W d`             //分割窗口并跳转到光标所在的标识符的定义上
- `CTRL-W f`             //分割窗口并跳转到光标所在的文件名上
- `CTRL-W ]`             //分割窗口并跳转到光标所在的标签上
- `CTRL-W }`             //在预览窗口显示光标所在tag
- `CTRL-W z`             //关闭预览窗口
- `CTRL-W s`	         //分割当前窗口为两部分，新的窗口 N 行高
- `CTRL-W v`             //垂直分割当前窗口，新的窗口 N 列宽
-                                      
-

== 会话 ==
- `:makesession file`   //创建一个file会话
- `:source file`        //恢复file会话
- `vim -c ":source file"`   //使用vim打开一个会话
== 可视模式 ==
- `gv`                  //重新选择上一次可视模式区域
- 
- 

== 命令行使用当前文件的名称 ==
* 前提：命令行模式 *
- `％`      //当前文件的名称
- `％:p`    //当前文件的全路径名称
- `％:e`    //当前文件的后缀

== 默认寄存器用处 ==
- `%`         //当前文件名
- `#`           //交替文件名称
- `:`           //最近执行的命令
- `/`           //最后查询模式
- `"`           //最后使用的寄存器
*"%p 粘贴当前文件名*
- `0`           //最近一次复制的内容
- `1`           //最近一次删除的内容
- `2-9`         //最近N次删除的内容

